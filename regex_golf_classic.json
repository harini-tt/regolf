[
  {
    "problem": "Warmup",
    "expr": "foo",
    "yes": [
      "afoot",
      "catfoot",
      "dogfoot",
      "fanfoot",
      "foody",
      "foolery",
      "foolish",
      "fooster",
      "footage",
      "foothot",
      "footle",
      "footpad",
      "footway",
      "hotfoot",
      "jawfoot",
      "mafoo",
      "nonfood",
      "padfoot",
      "prefool",
      "sfoot",
      "unfool"
    ],
    "no": [
      "Atlas",
      "Aymoro",
      "Iberic",
      "Mahran",
      "Ormazd",
      "Silipan",
      "altared",
      "chandoo",
      "crenel",
      "crooked",
      "fardo",
      "folksy",
      "forest",
      "hebamic",
      "idgah",
      "manlike",
      "marly",
      "palazzi",
      "sixfold",
      "tarrock",
      "unfold"
    ]
  },
  {
    "problem": "Warmup",
    "expr": "f.o",
    "yes": [
      "afoot",
      "catfoot",
      "dogfoot",
      "fanfoot",
      "foody",
      "foolery",
      "foolish",
      "fooster",
      "footage",
      "foothot",
      "footle",
      "footpad",
      "footway",
      "hotfoot",
      "jawfoot",
      "mafoo",
      "nonfood",
      "padfoot",
      "prefool",
      "sfoot",
      "unfool"
    ],
    "no": [
      "Atlas",
      "Aymoro",
      "Iberic",
      "Mahran",
      "Ormazd",
      "Silipan",
      "altared",
      "chandoo",
      "crenel",
      "crooked",
      "fardo",
      "folksy",
      "forest",
      "hebamic",
      "idgah",
      "manlike",
      "marly",
      "palazzi",
      "sixfold",
      "tarrock",
      "unfold"
    ]
  },
  {
    "problem": "Anchors",
    "expr": "k$",
    "yes": [
      "Mick",
      "Rick",
      "allocochick",
      "backtrick",
      "bestick",
      "candlestick",
      "counterprick",
      "heartsick",
      "lampwick",
      "lick",
      "lungsick",
      "potstick",
      "quick",
      "rampick",
      "rebrick",
      "relick",
      "seasick",
      "slick",
      "tick",
      "unsick",
      "upstick"
    ],
    "no": [
      "Kickapoo",
      "Nickneven",
      "Rickettsiales",
      "billsticker",
      "borickite",
      "chickell",
      "fickleness",
      "finickily",
      "kilbrickenite",
      "lickpenny",
      "mispickel",
      "quickfoot",
      "quickhatch",
      "ricksha",
      "rollicking",
      "slapsticky",
      "snickdrawing",
      "sunstricken",
      "tricklingly",
      "unlicked",
      "unnickeled"
    ]
  },
  {
    "problem": "Ranges",
    "expr": "^[a-f]*$",
    "yes": [
      "abac",
      "accede",
      "adead",
      "babe",
      "bead",
      "bebed",
      "bedad",
      "bedded",
      "bedead",
      "bedeaf",
      "caba",
      "caffa",
      "dace",
      "dade",
      "daff",
      "dead",
      "deed",
      "deface",
      "faded",
      "faff",
      "feed"
    ],
    "no": [
      "beam",
      "buoy",
      "canjac",
      "chymia",
      "corah",
      "cupula",
      "griece",
      "hafter",
      "idic",
      "lucy",
      "martyr",
      "matron",
      "messrs",
      "mucose",
      "relose",
      "sonly",
      "tegua",
      "threap",
      "towned",
      "widish",
      "yite"
    ]
  },
  {
    "problem": "Ranges",
    "expr": "[a-f]{4}",
    "yes": [
      "abac",
      "accede",
      "adead",
      "babe",
      "bead",
      "bebed",
      "bedad",
      "bedded",
      "bedead",
      "bedeaf",
      "caba",
      "caffa",
      "dace",
      "dade",
      "daff",
      "dead",
      "deed",
      "deface",
      "faded",
      "faff",
      "feed"
    ],
    "no": [
      "beam",
      "buoy",
      "canjac",
      "chymia",
      "corah",
      "cupula",
      "griece",
      "hafter",
      "idic",
      "lucy",
      "martyr",
      "matron",
      "messrs",
      "mucose",
      "relose",
      "sonly",
      "tegua",
      "threap",
      "towned",
      "widish",
      "yite"
    ]
  },
  {
    "problem": "Ranges",
    "expr": "[a-g]{4}",
    "yes": [
      "abac",
      "accede",
      "adead",
      "babe",
      "bead",
      "bebed",
      "bedad",
      "bedded",
      "bedead",
      "bedeaf",
      "caba",
      "caffa",
      "dace",
      "dade",
      "daff",
      "dead",
      "deed",
      "deface",
      "faded",
      "faff",
      "feed"
    ],
    "no": [
      "beam",
      "buoy",
      "canjac",
      "chymia",
      "corah",
      "cupula",
      "griece",
      "hafter",
      "idic",
      "lucy",
      "martyr",
      "matron",
      "messrs",
      "mucose",
      "relose",
      "sonly",
      "tegua",
      "threap",
      "towned",
      "widish",
      "yite"
    ]
  },
  {
    "problem": "Ranges",
    "expr": "[a-h]{4}",
    "yes": [
      "abac",
      "accede",
      "adead",
      "babe",
      "bead",
      "bebed",
      "bedad",
      "bedded",
      "bedead",
      "bedeaf",
      "caba",
      "caffa",
      "dace",
      "dade",
      "daff",
      "dead",
      "deed",
      "deface",
      "faded",
      "faff",
      "feed"
    ],
    "no": [
      "beam",
      "buoy",
      "canjac",
      "chymia",
      "corah",
      "cupula",
      "griece",
      "hafter",
      "idic",
      "lucy",
      "martyr",
      "matron",
      "messrs",
      "mucose",
      "relose",
      "sonly",
      "tegua",
      "threap",
      "towned",
      "widish",
      "yite"
    ]
  },
  {
    "problem": "Ranges",
    "expr": "^[a-g]*$",
    "yes": [
      "abac",
      "accede",
      "adead",
      "babe",
      "bead",
      "bebed",
      "bedad",
      "bedded",
      "bedead",
      "bedeaf",
      "caba",
      "caffa",
      "dace",
      "dade",
      "daff",
      "dead",
      "deed",
      "deface",
      "faded",
      "faff",
      "feed"
    ],
    "no": [
      "beam",
      "buoy",
      "canjac",
      "chymia",
      "corah",
      "cupula",
      "griece",
      "hafter",
      "idic",
      "lucy",
      "martyr",
      "matron",
      "messrs",
      "mucose",
      "relose",
      "sonly",
      "tegua",
      "threap",
      "towned",
      "widish",
      "yite"
    ]
  },
  {
    "problem": "Ranges",
    "expr": "^[a-h]*$",
    "yes": [
      "abac",
      "accede",
      "adead",
      "babe",
      "bead",
      "bebed",
      "bedad",
      "bedded",
      "bedead",
      "bedeaf",
      "caba",
      "caffa",
      "dace",
      "dade",
      "daff",
      "dead",
      "deed",
      "deface",
      "faded",
      "faff",
      "feed"
    ],
    "no": [
      "beam",
      "buoy",
      "canjac",
      "chymia",
      "corah",
      "cupula",
      "griece",
      "hafter",
      "idic",
      "lucy",
      "martyr",
      "matron",
      "messrs",
      "mucose",
      "relose",
      "sonly",
      "tegua",
      "threap",
      "towned",
      "widish",
      "yite"
    ]
  },
  {
    "problem": "Backrefs",
    "expr": "(...).*\\1",
    "yes": [
      "allochirally",
      "anticovenanting",
      "barbary",
      "calelectrical",
      "entablement",
      "ethanethiol",
      "froufrou",
      "furfuryl",
      "galagala",
      "heavyheaded",
      "linguatuline",
      "mathematic",
      "monoammonium",
      "perpera",
      "photophonic",
      "purpuraceous",
      "salpingonasal",
      "testes",
      "trisectrix",
      "undergrounder",
      "untaunted"
    ],
    "no": [
      "anticker",
      "corundum",
      "crabcatcher",
      "damnably",
      "foxtailed",
      "galvanotactic",
      "gummage",
      "gurniad",
      "hypergoddess",
      "kashga",
      "nonimitative",
      "parsonage",
      "pouchlike",
      "presumptuously",
      "pylar",
      "rachioparalysis",
      "scherzando",
      "swayed",
      "unbridledness",
      "unupbraidingly",
      "wellside"
    ]
  },
  {
    "problem": "Abba",
    "expr": "^(?!(.)+\\1)|ef",
    "yes": [
      "acritan",
      "aesthophysiology",
      "amphimictical",
      "baruria",
      "calomorphic",
      "disarmature",
      "effusive",
      "fluted",
      "fusoid",
      "goblinize",
      "nihilistic",
      "noisefully",
      "picrorhiza",
      "postarytenoid",
      "revolutionize",
      "suprasphanoidal",
      "suspenseful",
      "tapachula",
      "transmit",
      "unversatile",
      "vibetoite"
    ],
    "no": [
      "abba",
      "anallagmatic",
      "bassarisk",
      "chorioallantois",
      "coccomyces",
      "commotive",
      "engrammatic",
      "glossoscopia",
      "hexacoralla",
      "hippogriffin",
      "inflammableness",
      "otto",
      "overattached",
      "saffarid",
      "sarraceniaceae",
      "scillipicrin",
      "tlapallan",
      "trillion",
      "unclassably",
      "unfitting",
      "unsmelled",
      "warrandice"
    ]
  },
  {
    "problem": "Abba",
    "expr": "^(?!(.)+\\1)|.u",
    "yes": [
      "acritan",
      "aesthophysiology",
      "amphimictical",
      "baruria",
      "calomorphic",
      "disarmature",
      "effusive",
      "fluted",
      "fusoid",
      "goblinize",
      "nihilistic",
      "noisefully",
      "picrorhiza",
      "postarytenoid",
      "revolutionize",
      "suprasphanoidal",
      "suspenseful",
      "tapachula",
      "transmit",
      "unversatile",
      "vibetoite"
    ],
    "no": [
      "abba",
      "anallagmatic",
      "bassarisk",
      "chorioallantois",
      "coccomyces",
      "commotive",
      "engrammatic",
      "glossoscopia",
      "hexacoralla",
      "hippogriffin",
      "inflammableness",
      "otto",
      "overattached",
      "saffarid",
      "sarraceniaceae",
      "scillipicrin",
      "tlapallan",
      "trillion",
      "unclassably",
      "unfitting",
      "unsmelled",
      "warrandice"
    ]
  },
  {
    "problem": "Abba",
    "expr": "^(?!(.)+\\1)|fu",
    "yes": [
      "acritan",
      "aesthophysiology",
      "amphimictical",
      "baruria",
      "calomorphic",
      "disarmature",
      "effusive",
      "fluted",
      "fusoid",
      "goblinize",
      "nihilistic",
      "noisefully",
      "picrorhiza",
      "postarytenoid",
      "revolutionize",
      "suprasphanoidal",
      "suspenseful",
      "tapachula",
      "transmit",
      "unversatile",
      "vibetoite"
    ],
    "no": [
      "abba",
      "anallagmatic",
      "bassarisk",
      "chorioallantois",
      "coccomyces",
      "commotive",
      "engrammatic",
      "glossoscopia",
      "hexacoralla",
      "hippogriffin",
      "inflammableness",
      "otto",
      "overattached",
      "saffarid",
      "sarraceniaceae",
      "scillipicrin",
      "tlapallan",
      "trillion",
      "unclassably",
      "unfitting",
      "unsmelled",
      "warrandice"
    ]
  },
  {
    "problem": "A man, a plan",
    "expr": "^(.)[^p].*\\1$",
    "yes": [
      "civic",
      "deedeed",
      "degged",
      "hallah",
      "kakkak",
      "kook",
      "level",
      "murdrum",
      "noon",
      "redder",
      "repaper",
      "retter",
      "reviver",
      "rotator",
      "sexes",
      "sooloos",
      "tebbet",
      "tenet",
      "terret"
    ],
    "no": [
      "arrogatingly",
      "camshach",
      "cinnabar",
      "defendress",
      "derivedly",
      "gourmet",
      "hamleteer",
      "hydroaviation",
      "lophine",
      "nonalcohol",
      "outslink",
      "pretest",
      "psalterium",
      "psorosperm",
      "scrummage",
      "sporous",
      "springer",
      "sunburn",
      "teleoptile",
      "unstuttering",
      "womanways"
    ]
  },
  {
    "problem": "A man, a plan",
    "expr": "^(.)[^p].+\\1$",
    "yes": [
      "civic",
      "deedeed",
      "degged",
      "hallah",
      "kakkak",
      "kook",
      "level",
      "murdrum",
      "noon",
      "redder",
      "repaper",
      "retter",
      "reviver",
      "rotator",
      "sexes",
      "sooloos",
      "tebbet",
      "tenet",
      "terret"
    ],
    "no": [
      "arrogatingly",
      "camshach",
      "cinnabar",
      "defendress",
      "derivedly",
      "gourmet",
      "hamleteer",
      "hydroaviation",
      "lophine",
      "nonalcohol",
      "outslink",
      "pretest",
      "psalterium",
      "psorosperm",
      "scrummage",
      "sporous",
      "springer",
      "sunburn",
      "teleoptile",
      "unstuttering",
      "womanways"
    ]
  },
  {
    "problem": "A man, a plan",
    "expr": "^(\\w(?!p)).*\\1$",
    "yes": [
      "civic",
      "deedeed",
      "degged",
      "hallah",
      "kakkak",
      "kook",
      "level",
      "murdrum",
      "noon",
      "redder",
      "repaper",
      "retter",
      "reviver",
      "rotator",
      "sexes",
      "sooloos",
      "tebbet",
      "tenet",
      "terret"
    ],
    "no": [
      "arrogatingly",
      "camshach",
      "cinnabar",
      "defendress",
      "derivedly",
      "gourmet",
      "hamleteer",
      "hydroaviation",
      "lophine",
      "nonalcohol",
      "outslink",
      "pretest",
      "psalterium",
      "psorosperm",
      "scrummage",
      "sporous",
      "springer",
      "sunburn",
      "teleoptile",
      "unstuttering",
      "womanways"
    ]
  },
  {
    "problem": "Prime",
    "expr": "^(?!(11+)\\1+$)",
    "yes": [
      "xx",
      "xxx",
      "xxxxx",
      "xxxxxxx",
      "xxxxxxxxxxx",
      "xxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    ],
    "no": [
      "xxxx",
      "xxxxxx",
      "xxxxxxxx",
      "xxxxxxxxx",
      "xxxxxxxxxx",
      "xxxxxxxxxxxx",
      "xxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    ]
  },
  {
    "problem": "Prime",
    "expr": "^(?!(xx+)\\1+$)",
    "yes": [
      "xx",
      "xxx",
      "xxxxx",
      "xxxxxxx",
      "xxxxxxxxxxx",
      "xxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    ],
    "no": [
      "xxxx",
      "xxxxxx",
      "xxxxxxxx",
      "xxxxxxxxx",
      "xxxxxxxxxx",
      "xxxxxxxxxxxx",
      "xxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    ]
  },
  {
    "problem": "Prime",
    "expr": "^(?!(x+x)\\1+$)",
    "yes": [
      "xx",
      "xxx",
      "xxxxx",
      "xxxxxxx",
      "xxxxxxxxxxx",
      "xxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    ],
    "no": [
      "xxxx",
      "xxxxxx",
      "xxxxxxxx",
      "xxxxxxxxx",
      "xxxxxxxxxx",
      "xxxxxxxxxxxx",
      "xxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    ]
  },
  {
    "problem": "Prime",
    "expr": "^(?!(.+.)\\1+$)",
    "yes": [
      "xx",
      "xxx",
      "xxxxx",
      "xxxxxxx",
      "xxxxxxxxxxx",
      "xxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    ],
    "no": [
      "xxxx",
      "xxxxxx",
      "xxxxxxxx",
      "xxxxxxxxx",
      "xxxxxxxxxx",
      "xxxxxxxxxxxx",
      "xxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    ]
  },
  {
    "problem": "Prime",
    "expr": "^(?!(..+)\\1+$)",
    "yes": [
      "xx",
      "xxx",
      "xxxxx",
      "xxxxxxx",
      "xxxxxxxxxxx",
      "xxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    ],
    "no": [
      "xxxx",
      "xxxxxx",
      "xxxxxxxx",
      "xxxxxxxxx",
      "xxxxxxxxxx",
      "xxxxxxxxxxxx",
      "xxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    ]
  },
  {
    "problem": "Prime",
    "expr": "^(?!(..+)(\\1)+$)",
    "yes": [
      "xx",
      "xxx",
      "xxxxx",
      "xxxxxxx",
      "xxxxxxxxxxx",
      "xxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    ],
    "no": [
      "xxxx",
      "xxxxxx",
      "xxxxxxxx",
      "xxxxxxxxx",
      "xxxxxxxxxx",
      "xxxxxxxxxxxx",
      "xxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    ]
  },
  {
    "problem": "Four",
    "expr": "(.)(.\\1){3}",
    "yes": [
      "Makaraka",
      "Wasagara",
      "degenerescence",
      "desilicification",
      "elevener",
      "hipponosological",
      "homoeomorphy",
      "homologous",
      "ileocolotomy",
      "intervisibility",
      "jararaca",
      "locomotory",
      "micropoikilitic",
      "odontonosology",
      "parhomologous",
      "pogonotomy",
      "promonopolist",
      "protohomo",
      "pseudoprimitivism",
      "tocororo",
      "unintelligibility"
    ],
    "no": [
      "Ludgate",
      "Mitsukurinidae",
      "Ternstroemiaceae",
      "arrhythmical",
      "bleater",
      "energetics",
      "inthrow",
      "mecopterous",
      "multum",
      "naphthalene",
      "nullibicity",
      "observancy",
      "overpunishment",
      "overregularly",
      "overwilily",
      "participator",
      "predisable",
      "reyield",
      "rubeola",
      "traitorlike",
      "unregainable"
    ]
  },
  {
    "problem": "Four",
    "expr": "([aeio]).{5}\\1",
    "yes": [
      "Makaraka",
      "Wasagara",
      "degenerescence",
      "desilicification",
      "elevener",
      "hipponosological",
      "homoeomorphy",
      "homologous",
      "ileocolotomy",
      "intervisibility",
      "jararaca",
      "locomotory",
      "micropoikilitic",
      "odontonosology",
      "parhomologous",
      "pogonotomy",
      "promonopolist",
      "protohomo",
      "pseudoprimitivism",
      "tocororo",
      "unintelligibility"
    ],
    "no": [
      "Ludgate",
      "Mitsukurinidae",
      "Ternstroemiaceae",
      "arrhythmical",
      "bleater",
      "energetics",
      "inthrow",
      "mecopterous",
      "multum",
      "naphthalene",
      "nullibicity",
      "observancy",
      "overpunishment",
      "overregularly",
      "overwilily",
      "participator",
      "predisable",
      "reyield",
      "rubeola",
      "traitorlike",
      "unregainable"
    ]
  },
  {
    "problem": "Order",
    "expr": "^[^o]?.{5}$",
    "yes": [
      "access",
      "accloy",
      "adeem",
      "aflow",
      "aglow",
      "beefin",
      "befist",
      "billot",
      "bossy",
      "certy",
      "chintz",
      "chips",
      "chort",
      "cloop",
      "coost",
      "demos",
      "fitty",
      "flory",
      "flossy",
      "ghost",
      "mopsy"
    ],
    "no": [
      "analyse",
      "balanism",
      "baronet",
      "biddable",
      "griefless",
      "harebrain",
      "jestword",
      "laicize",
      "marvelry",
      "oriole",
      "pickietar",
      "preferee",
      "primness",
      "pulghere",
      "rebirth",
      "scupper",
      "serigraph",
      "sororize",
      "theowman",
      "unfrayed",
      "wagonman"
    ]
  },
  {
    "problem": "Order",
    "expr": "^.{5}[^e]?$",
    "yes": [
      "access",
      "accloy",
      "adeem",
      "aflow",
      "aglow",
      "beefin",
      "befist",
      "billot",
      "bossy",
      "certy",
      "chintz",
      "chips",
      "chort",
      "cloop",
      "coost",
      "demos",
      "fitty",
      "flory",
      "flossy",
      "ghost",
      "mopsy"
    ],
    "no": [
      "analyse",
      "balanism",
      "baronet",
      "biddable",
      "griefless",
      "harebrain",
      "jestword",
      "laicize",
      "marvelry",
      "oriole",
      "pickietar",
      "preferee",
      "primness",
      "pulghere",
      "rebirth",
      "scupper",
      "serigraph",
      "sororize",
      "theowman",
      "unfrayed",
      "wagonman"
    ]
  },
  {
    "problem": "Triples",
    "expr": "[02-5][123][257]|[07][0269]+3?$|55",
    "yes": [
      "000000000",
      "000000003",
      "000000006",
      "000000009",
      "000000012",
      "000000015",
      "066990060",
      "140091876",
      "173655750",
      "312440187",
      "321769005",
      "368542278",
      "390259104",
      "402223947",
      "443512431",
      "714541758",
      "747289572",
      "819148602",
      "878531775",
      "905586303",
      "953734824"
    ],
    "no": [
      "000000005",
      "000000008",
      "000000010",
      "000000011",
      "000000014",
      "018990130",
      "112057285",
      "159747125",
      "176950268",
      "259108903",
      "333162608",
      "388401457",
      "477848777",
      "478621693",
      "531683939",
      "704168662",
      "759282218",
      "769340942",
      "851936815",
      "973816159",
      "979204403"
    ]
  },
  {
    "problem": "Triples",
    "expr": "^(([147]4|40|3[269]|9[05]|[378]1).+|0[369]*|[81][257])*$",
    "yes": [
      "000000000",
      "000000003",
      "000000006",
      "000000009",
      "000000012",
      "000000015",
      "066990060",
      "140091876",
      "173655750",
      "312440187",
      "321769005",
      "368542278",
      "390259104",
      "402223947",
      "443512431",
      "714541758",
      "747289572",
      "819148602",
      "878531775",
      "905586303",
      "953734824"
    ],
    "no": [
      "000000005",
      "000000008",
      "000000010",
      "000000011",
      "000000014",
      "018990130",
      "112057285",
      "159747125",
      "176950268",
      "259108903",
      "333162608",
      "388401457",
      "477848777",
      "478621693",
      "531683939",
      "704168662",
      "759282218",
      "769340942",
      "851936815",
      "973816159",
      "979204403"
    ]
  },
  {
    "problem": "Triples",
    "expr": "^[387][12479]|00($|[369]|1[25])|5[54]|2[437]",
    "yes": [
      "000000000",
      "000000003",
      "000000006",
      "000000009",
      "000000012",
      "000000015",
      "066990060",
      "140091876",
      "173655750",
      "312440187",
      "321769005",
      "368542278",
      "390259104",
      "402223947",
      "443512431",
      "714541758",
      "747289572",
      "819148602",
      "878531775",
      "905586303",
      "953734824"
    ],
    "no": [
      "000000005",
      "000000008",
      "000000010",
      "000000011",
      "000000014",
      "018990130",
      "112057285",
      "159747125",
      "176950268",
      "259108903",
      "333162608",
      "388401457",
      "477848777",
      "478621693",
      "531683939",
      "704168662",
      "759282218",
      "769340942",
      "851936815",
      "973816159",
      "979204403"
    ]
  },
  {
    "problem": "Triples",
    "expr": "00($|[369]|1[25])|(^.|9|3)..5|4.2|^[38]1",
    "yes": [
      "000000000",
      "000000003",
      "000000006",
      "000000009",
      "000000012",
      "000000015",
      "066990060",
      "140091876",
      "173655750",
      "312440187",
      "321769005",
      "368542278",
      "390259104",
      "402223947",
      "443512431",
      "714541758",
      "747289572",
      "819148602",
      "878531775",
      "905586303",
      "953734824"
    ],
    "no": [
      "000000005",
      "000000008",
      "000000010",
      "000000011",
      "000000014",
      "018990130",
      "112057285",
      "159747125",
      "176950268",
      "259108903",
      "333162608",
      "388401457",
      "477848777",
      "478621693",
      "531683939",
      "704168662",
      "759282218",
      "769340942",
      "851936815",
      "973816159",
      "979204403"
    ]
  },
  {
    "problem": "Triples",
    "expr": "32|.[25][345].|00([369]|1[25]|$)|[07]2$",
    "yes": [
      "000000000",
      "000000003",
      "000000006",
      "000000009",
      "000000012",
      "000000015",
      "066990060",
      "140091876",
      "173655750",
      "312440187",
      "321769005",
      "368542278",
      "390259104",
      "402223947",
      "443512431",
      "714541758",
      "747289572",
      "819148602",
      "878531775",
      "905586303",
      "953734824"
    ],
    "no": [
      "000000005",
      "000000008",
      "000000010",
      "000000011",
      "000000014",
      "018990130",
      "112057285",
      "159747125",
      "176950268",
      "259108903",
      "333162608",
      "388401457",
      "477848777",
      "478621693",
      "531683939",
      "704168662",
      "759282218",
      "769340942",
      "851936815",
      "973816159",
      "979204403"
    ]
  },
  {
    "problem": "Triples",
    "expr": "00([369]|1[25]|$)|.1.+4|3.*7.|4.2|55",
    "yes": [
      "000000000",
      "000000003",
      "000000006",
      "000000009",
      "000000012",
      "000000015",
      "066990060",
      "140091876",
      "173655750",
      "312440187",
      "321769005",
      "368542278",
      "390259104",
      "402223947",
      "443512431",
      "714541758",
      "747289572",
      "819148602",
      "878531775",
      "905586303",
      "953734824"
    ],
    "no": [
      "000000005",
      "000000008",
      "000000010",
      "000000011",
      "000000014",
      "018990130",
      "112057285",
      "159747125",
      "176950268",
      "259108903",
      "333162608",
      "388401457",
      "477848777",
      "478621693",
      "531683939",
      "704168662",
      "759282218",
      "769340942",
      "851936815",
      "973816159",
      "979204403"
    ]
  },
  {
    "problem": "Triples",
    "expr": "00($|3|6|9|12|15)|4.2|.1.+4|55|.17",
    "yes": [
      "000000000",
      "000000003",
      "000000006",
      "000000009",
      "000000012",
      "000000015",
      "066990060",
      "140091876",
      "173655750",
      "312440187",
      "321769005",
      "368542278",
      "390259104",
      "402223947",
      "443512431",
      "714541758",
      "747289572",
      "819148602",
      "878531775",
      "905586303",
      "953734824"
    ],
    "no": [
      "000000005",
      "000000008",
      "000000010",
      "000000011",
      "000000014",
      "018990130",
      "112057285",
      "159747125",
      "176950268",
      "259108903",
      "333162608",
      "388401457",
      "477848777",
      "478621693",
      "531683939",
      "704168662",
      "759282218",
      "769340942",
      "851936815",
      "973816159",
      "979204403"
    ]
  },
  {
    "problem": "Glob",
    "expr": "[cnprw][opr]|le\\w|t[a*]",
    "yes": [
      "*err* matches superreform",
      "*falle*ess matches unfallenness",
      "*il*log* matches unphilological",
      "*plen*tud* matches overplenitude",
      "*taiodi* matches pentaiodide",
      "*viceberry matches serviceberry",
      "bowdl* matches bowdlerism",
      "bron*hopleur*sy matches bronchopleurisy",
      "chromatophobia matches chromatophobia",
      "cockneyla* matches cockneyland",
      "colorlessly matches colorlessly",
      "cretefaction matches cretefaction",
      "downrightly matches downrightly",
      "leather* matches leatherbark"
    ],
    "no": [
      "mitogenet* matches mitogenetic",
      "palindrom* matches palindromic",
      "parallelepiped matches parallelepiped",
      "primigenial matches primigenial",
      "puppe* matches puppetlike",
      "resurrender matches resurrender",
      "wreathwi* matches wreathwise",
      "*anapaestical* matches anapaestically",
      "*chegonio matches archegoniophore",
      "*dissoluti* matches dissolutional",
      "*domestica matches domesticality",
      "*expedition matches expedition",
      "*hormog matches hormogonium",
      "*stipular* matches infrastipular",
      "*strabis matches strabismal",
      "cathartica matches cathartically",
      "di matches gerundively",
      "hacean matches zoanthacean",
      "headmist matches headmistress",
      "herwi matches trencherwise",
      "iemphraxia matches cardiemphraxia",
      "kmak matches packmaking",
      "mbable* matches unclimbable",
      "nspi*tor matches inspirator",
      "ocumidi matches pseudocumidine",
      "raretinal* matches intraretinal",
      "tte matches whitterick",
      "uefoliate matches quinquefoliate"
    ]
  },
  {
    "problem": "Glob",
    "expr": "[cnprw][opr]|le\\w|en.?t",
    "yes": [
      "*err* matches superreform",
      "*falle*ess matches unfallenness",
      "*il*log* matches unphilological",
      "*plen*tud* matches overplenitude",
      "*taiodi* matches pentaiodide",
      "*viceberry matches serviceberry",
      "bowdl* matches bowdlerism",
      "bron*hopleur*sy matches bronchopleurisy",
      "chromatophobia matches chromatophobia",
      "cockneyla* matches cockneyland",
      "colorlessly matches colorlessly",
      "cretefaction matches cretefaction",
      "downrightly matches downrightly",
      "leather* matches leatherbark"
    ],
    "no": [
      "mitogenet* matches mitogenetic",
      "palindrom* matches palindromic",
      "parallelepiped matches parallelepiped",
      "primigenial matches primigenial",
      "puppe* matches puppetlike",
      "resurrender matches resurrender",
      "wreathwi* matches wreathwise",
      "*anapaestical* matches anapaestically",
      "*chegonio matches archegoniophore",
      "*dissoluti* matches dissolutional",
      "*domestica matches domesticality",
      "*expedition matches expedition",
      "*hormog matches hormogonium",
      "*stipular* matches infrastipular",
      "*strabis matches strabismal",
      "cathartica matches cathartically",
      "di matches gerundively",
      "hacean matches zoanthacean",
      "headmist matches headmistress",
      "herwi matches trencherwise",
      "iemphraxia matches cardiemphraxia",
      "kmak matches packmaking",
      "mbable* matches unclimbable",
      "nspi*tor matches inspirator",
      "ocumidi matches pseudocumidine",
      "raretinal* matches intraretinal",
      "tte matches whitterick",
      "uefoliate matches quinquefoliate"
    ]
  },
  {
    "problem": "Glob",
    "expr": "[^rt][cenprw][n-r][a-t]",
    "yes": [
      "*err* matches superreform",
      "*falle*ess matches unfallenness",
      "*il*log* matches unphilological",
      "*plen*tud* matches overplenitude",
      "*taiodi* matches pentaiodide",
      "*viceberry matches serviceberry",
      "bowdl* matches bowdlerism",
      "bron*hopleur*sy matches bronchopleurisy",
      "chromatophobia matches chromatophobia",
      "cockneyla* matches cockneyland",
      "colorlessly matches colorlessly",
      "cretefaction matches cretefaction",
      "downrightly matches downrightly",
      "leather* matches leatherbark"
    ],
    "no": [
      "mitogenet* matches mitogenetic",
      "palindrom* matches palindromic",
      "parallelepiped matches parallelepiped",
      "primigenial matches primigenial",
      "puppe* matches puppetlike",
      "resurrender matches resurrender",
      "wreathwi* matches wreathwise",
      "*anapaestical* matches anapaestically",
      "*chegonio matches archegoniophore",
      "*dissoluti* matches dissolutional",
      "*domestica matches domesticality",
      "*expedition matches expedition",
      "*hormog matches hormogonium",
      "*stipular* matches infrastipular",
      "*strabis matches strabismal",
      "cathartica matches cathartically",
      "di matches gerundively",
      "hacean matches zoanthacean",
      "headmist matches headmistress",
      "herwi matches trencherwise",
      "iemphraxia matches cardiemphraxia",
      "kmak matches packmaking",
      "mbable* matches unclimbable",
      "nspi*tor matches inspirator",
      "ocumidi matches pseudocumidine",
      "raretinal* matches intraretinal",
      "tte matches whitterick",
      "uefoliate matches quinquefoliate"
    ]
  },
  {
    "problem": "Glob",
    "expr": "^(.*)\\*(.*) .* \\1.+\\2$|^(.+) .* \\3$|^.*\\*(.*)\\*.* .* .+\\4.+$",
    "yes": [
      "*err* matches superreform",
      "*falle*ess matches unfallenness",
      "*il*log* matches unphilological",
      "*plen*tud* matches overplenitude",
      "*taiodi* matches pentaiodide",
      "*viceberry matches serviceberry",
      "bowdl* matches bowdlerism",
      "bron*hopleur*sy matches bronchopleurisy",
      "chromatophobia matches chromatophobia",
      "cockneyla* matches cockneyland",
      "colorlessly matches colorlessly",
      "cretefaction matches cretefaction",
      "downrightly matches downrightly",
      "leather* matches leatherbark"
    ],
    "no": [
      "mitogenet* matches mitogenetic",
      "palindrom* matches palindromic",
      "parallelepiped matches parallelepiped",
      "primigenial matches primigenial",
      "puppe* matches puppetlike",
      "resurrender matches resurrender",
      "wreathwi* matches wreathwise",
      "*anapaestical* matches anapaestically",
      "*chegonio matches archegoniophore",
      "*dissoluti* matches dissolutional",
      "*domestica matches domesticality",
      "*expedition matches expedition",
      "*hormog matches hormogonium",
      "*stipular* matches infrastipular",
      "*strabis matches strabismal",
      "cathartica matches cathartically",
      "di matches gerundively",
      "hacean matches zoanthacean",
      "headmist matches headmistress",
      "herwi matches trencherwise",
      "iemphraxia matches cardiemphraxia",
      "kmak matches packmaking",
      "mbable* matches unclimbable",
      "nspi*tor matches inspirator",
      "ocumidi matches pseudocumidine",
      "raretinal* matches intraretinal",
      "tte matches whitterick",
      "uefoliate matches quinquefoliate"
    ]
  },
  {
    "problem": "Glob",
    "expr": "^(.*) .* \\1$|^(.*)\\*(.*) .* \\2.+\\3$|(.*)\\*(.*)\\*(.*) .* \\4.+\\5.+\\6",
    "yes": [
      "*err* matches superreform",
      "*falle*ess matches unfallenness",
      "*il*log* matches unphilological",
      "*plen*tud* matches overplenitude",
      "*taiodi* matches pentaiodide",
      "*viceberry matches serviceberry",
      "bowdl* matches bowdlerism",
      "bron*hopleur*sy matches bronchopleurisy",
      "chromatophobia matches chromatophobia",
      "cockneyla* matches cockneyland",
      "colorlessly matches colorlessly",
      "cretefaction matches cretefaction",
      "downrightly matches downrightly",
      "leather* matches leatherbark"
    ],
    "no": [
      "mitogenet* matches mitogenetic",
      "palindrom* matches palindromic",
      "parallelepiped matches parallelepiped",
      "primigenial matches primigenial",
      "puppe* matches puppetlike",
      "resurrender matches resurrender",
      "wreathwi* matches wreathwise",
      "*anapaestical* matches anapaestically",
      "*chegonio matches archegoniophore",
      "*dissoluti* matches dissolutional",
      "*domestica matches domesticality",
      "*expedition matches expedition",
      "*hormog matches hormogonium",
      "*stipular* matches infrastipular",
      "*strabis matches strabismal",
      "cathartica matches cathartically",
      "di matches gerundively",
      "hacean matches zoanthacean",
      "headmist matches headmistress",
      "herwi matches trencherwise",
      "iemphraxia matches cardiemphraxia",
      "kmak matches packmaking",
      "mbable* matches unclimbable",
      "nspi*tor matches inspirator",
      "ocumidi matches pseudocumidine",
      "raretinal* matches intraretinal",
      "tte matches whitterick",
      "uefoliate matches quinquefoliate"
    ]
  },
  {
    "problem": "Glob",
    "expr": "^((\\w*)( .+ \\2$|\\*(\\w*)( .+ \\2.+\\4$|\\*.* .+ \\2.+\\4.)))",
    "yes": [
      "*err* matches superreform",
      "*falle*ess matches unfallenness",
      "*il*log* matches unphilological",
      "*plen*tud* matches overplenitude",
      "*taiodi* matches pentaiodide",
      "*viceberry matches serviceberry",
      "bowdl* matches bowdlerism",
      "bron*hopleur*sy matches bronchopleurisy",
      "chromatophobia matches chromatophobia",
      "cockneyla* matches cockneyland",
      "colorlessly matches colorlessly",
      "cretefaction matches cretefaction",
      "downrightly matches downrightly",
      "leather* matches leatherbark"
    ],
    "no": [
      "mitogenet* matches mitogenetic",
      "palindrom* matches palindromic",
      "parallelepiped matches parallelepiped",
      "primigenial matches primigenial",
      "puppe* matches puppetlike",
      "resurrender matches resurrender",
      "wreathwi* matches wreathwise",
      "*anapaestical* matches anapaestically",
      "*chegonio matches archegoniophore",
      "*dissoluti* matches dissolutional",
      "*domestica matches domesticality",
      "*expedition matches expedition",
      "*hormog matches hormogonium",
      "*stipular* matches infrastipular",
      "*strabis matches strabismal",
      "cathartica matches cathartically",
      "di matches gerundively",
      "hacean matches zoanthacean",
      "headmist matches headmistress",
      "herwi matches trencherwise",
      "iemphraxia matches cardiemphraxia",
      "kmak matches packmaking",
      "mbable* matches unclimbable",
      "nspi*tor matches inspirator",
      "ocumidi matches pseudocumidine",
      "raretinal* matches intraretinal",
      "tte matches whitterick",
      "uefoliate matches quinquefoliate"
    ]
  },
  {
    "problem": "Glob",
    "expr": "^((.*)(.+ \\2$|\\*(.*)( .+ \\2.+\\4$|\\*.*.+ \\2.+\\4.)))",
    "yes": [
      "*err* matches superreform",
      "*falle*ess matches unfallenness",
      "*il*log* matches unphilological",
      "*plen*tud* matches overplenitude",
      "*taiodi* matches pentaiodide",
      "*viceberry matches serviceberry",
      "bowdl* matches bowdlerism",
      "bron*hopleur*sy matches bronchopleurisy",
      "chromatophobia matches chromatophobia",
      "cockneyla* matches cockneyland",
      "colorlessly matches colorlessly",
      "cretefaction matches cretefaction",
      "downrightly matches downrightly",
      "leather* matches leatherbark"
    ],
    "no": [
      "mitogenet* matches mitogenetic",
      "palindrom* matches palindromic",
      "parallelepiped matches parallelepiped",
      "primigenial matches primigenial",
      "puppe* matches puppetlike",
      "resurrender matches resurrender",
      "wreathwi* matches wreathwise",
      "*anapaestical* matches anapaestically",
      "*chegonio matches archegoniophore",
      "*dissoluti* matches dissolutional",
      "*domestica matches domesticality",
      "*expedition matches expedition",
      "*hormog matches hormogonium",
      "*stipular* matches infrastipular",
      "*strabis matches strabismal",
      "cathartica matches cathartically",
      "di matches gerundively",
      "hacean matches zoanthacean",
      "headmist matches headmistress",
      "herwi matches trencherwise",
      "iemphraxia matches cardiemphraxia",
      "kmak matches packmaking",
      "mbable* matches unclimbable",
      "nspi*tor matches inspirator",
      "ocumidi matches pseudocumidine",
      "raretinal* matches intraretinal",
      "tte matches whitterick",
      "uefoliate matches quinquefoliate"
    ]
  },
  {
    "problem": "Powers",
    "expr": "^(?!(x(xx)+)\\1*$)",
    "yes": [
      "x",
      "xx",
      "xxxx",
      "xxxxxxxx",
      "xxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    ],
    "no": [
      "xxx",
      "xxxxx",
      "xxxxxxx",
      "xxxxxxxxx",
      "xxxxxxxxxx",
      "xxxxxxxxxxxx",
      "xxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    ]
  },
  {
    "problem": "Long count",
    "expr": "((.+)0\\2+1){8}",
    "yes": [
      "0000 0001 0010 0011 0100 0101 0110 0111 1000 1001 1010 1011 1100 1101 1110 1111"
    ],
    "no": [
      "0000 0001 0000 0011 0100 0101 0110 0110 1000 1001 1010 1011 1100 1101 1110 1111",
      "0000 0001 0010 0010 0100 0101 0110 0111 1000 1001 1010 1011 1100 1101 1110 1111",
      "0000 0001 0010 0011 0000 0101 0110 0111 1000 1001 1010 1011 1100 1101 1110 1111",
      "0000 0001 0010 0011 0100 0101 0110 0011 1000 1001 1010 1011 1100 1101 1110 1111",
      "0000 0001 0010 0011 0100 0101 0110 0111 1000 0001 1010 1011 1100 1101 1110 1111",
      "0000 0001 0010 0011 0100 0101 0110 0111 1000 1000 1010 1011 1100 1101 1110 1111",
      "0000 0001 0010 0011 0100 0101 0110 0111 1000 1001 1010 1001 1100 1101 1110 1111",
      "0000 0001 0010 0011 0100 0101 0110 0111 1000 1001 101011011 1100 1101 1110 1111",
      "0000 0001 0010 0011 0100 0101 0110 0111 1000 1001 1110 1011 1100 1101 1110 1111",
      "0000 0001 0010 0011 0100 0101 0110 0111 1010 1001 1010 1011 1100 1101 1110 1111",
      "0000 0001 0010 0011 0100 0101 0110 011111000 1001 1010 1011 1100 1101 1110 1111",
      "0000 0001 0010 0011 0100 0101 0111 0111 1000 1001 1010 1011 1100 1101 1110 1111",
      "0000 0001 0010 0011 0100 0101 1110 0111 1000 1001 1010 1011 1100 1101 1110 1111",
      "0000 0001 0010 0011 0100 0111 0110 0111 1000 1001 1010 1011 1100 1101 1110 1111",
      "0000 0001 0010 0011 010010101 0110 0111 1000 1001 1010 1011 1100 1101 1110 1111",
      "0000 0001 0010 1011 0100 0101 0110 0111 1000 1001 1010 1011 1100 1101 1110 1111",
      "0000 000110010 0011 0100 0101 0110 0111 1000 1000 1010 1011 1100 1101 1110 1111",
      "0000 0101 0010 0011 0100 0101 0110 0111 1000 1001 1010 1010 1100 1101 1110 1111",
      "0001 0001 0010 0011 0100 0101 0110 0111 1000 1001 1010 1011 1100 1100 1110 1111",
      "1000 0001 0010 0011 0100 0101 0110 0111 1000 1001 1010 1011 1100 1101 1110 1110"
    ]
  },
  {
    "problem": "Long count",
    "expr": "((.+)0\\2[1]){8}",
    "yes": [
      "0000 0001 0010 0011 0100 0101 0110 0111 1000 1001 1010 1011 1100 1101 1110 1111"
    ],
    "no": [
      "0000 0001 0000 0011 0100 0101 0110 0110 1000 1001 1010 1011 1100 1101 1110 1111",
      "0000 0001 0010 0010 0100 0101 0110 0111 1000 1001 1010 1011 1100 1101 1110 1111",
      "0000 0001 0010 0011 0000 0101 0110 0111 1000 1001 1010 1011 1100 1101 1110 1111",
      "0000 0001 0010 0011 0100 0101 0110 0011 1000 1001 1010 1011 1100 1101 1110 1111",
      "0000 0001 0010 0011 0100 0101 0110 0111 1000 0001 1010 1011 1100 1101 1110 1111",
      "0000 0001 0010 0011 0100 0101 0110 0111 1000 1000 1010 1011 1100 1101 1110 1111",
      "0000 0001 0010 0011 0100 0101 0110 0111 1000 1001 1010 1001 1100 1101 1110 1111",
      "0000 0001 0010 0011 0100 0101 0110 0111 1000 1001 101011011 1100 1101 1110 1111",
      "0000 0001 0010 0011 0100 0101 0110 0111 1000 1001 1110 1011 1100 1101 1110 1111",
      "0000 0001 0010 0011 0100 0101 0110 0111 1010 1001 1010 1011 1100 1101 1110 1111",
      "0000 0001 0010 0011 0100 0101 0110 011111000 1001 1010 1011 1100 1101 1110 1111",
      "0000 0001 0010 0011 0100 0101 0111 0111 1000 1001 1010 1011 1100 1101 1110 1111",
      "0000 0001 0010 0011 0100 0101 1110 0111 1000 1001 1010 1011 1100 1101 1110 1111",
      "0000 0001 0010 0011 0100 0111 0110 0111 1000 1001 1010 1011 1100 1101 1110 1111",
      "0000 0001 0010 0011 010010101 0110 0111 1000 1001 1010 1011 1100 1101 1110 1111",
      "0000 0001 0010 1011 0100 0101 0110 0111 1000 1001 1010 1011 1100 1101 1110 1111",
      "0000 000110010 0011 0100 0101 0110 0111 1000 1000 1010 1011 1100 1101 1110 1111",
      "0000 0101 0010 0011 0100 0101 0110 0111 1000 1001 1010 1010 1100 1101 1110 1111",
      "0001 0001 0010 0011 0100 0101 0110 0111 1000 1001 1010 1011 1100 1100 1110 1111",
      "1000 0001 0010 0011 0100 0101 0110 0111 1000 1001 1010 1011 1100 1101 1110 1110"
    ]
  },
  {
    "problem": "Alphabetical",
    "expr": "^(?!.*(rne|eet |e.r...t|er.{6}r$))(a\\S+\\s)*(e\\S+\\s)*(r\\S+\\s)*([st]\\S+(\\s|$))*$",
    "yes": [
      "aerate aerate arrest errant serene tanner testes",
      "aerate assent assent assert rester retest tenant",
      "aerate assert rearer renter resent serene teaser",
      "aerate easter easter tenant tester testes tsetse",
      "arrest arrest easter entree errant resent senate",
      "assent assess assets estate resent staree teaser",
      "assert astern renter rerent resent staree street",
      "assert enseat entree errata rennet teaser tsetse",
      "assert rennet renter reseat rester serene tenant",
      "assess easter estate rennet rennet tenant testes",
      "assess easter estate rerent resent retest snarer",
      "assess renter renter searer seater snarer testes",
      "astern enseat entree serene staree tartar tartar",
      "astern rennet retest searer snarer tartar tester",
      "enseat errata seater senate strata teaser tsetse",
      "entree searer staree taster taster tenant testes",
      "rerent rester tanner tartar teaser teaser testes",
      "aerate astern assess enseat senate street tsetse",
      "aerate rennet errant enseat rerent senate testes",
      "arrest assess assess assent astern searer testes",
      "assert assess errata enseat earner seater serene",
      "assert astern staree senate snarer tanner tester",
      "assert strata rerent rerent tanner testes tsetse",
      "assess easter entree rester reseat seater tartar",
      "astern assets rearer rearer assess rearer testes",
      "astern easter taster serene reseat taster tester",
      "earner entree rerent reseat teaser strata staree",
      "earner errant estate taster reseat estate taster",
      "enseat astern arrest enseat searer seater tenant",
      "errant errant senate renter rearer street tsetse",
      "rennet rennet assent errant rester staree tester",
      "rennet snarer senate retest tanner tartar tsetse",
      "retest astern arrest tsetse strata senate tsetse",
      "searer errant teaser staree assess teaser tsetse"
    ],
    "no": []
  },
  {
    "problem": "Alphabetical",
    "expr": "[^et] ren|[er]( \\w+)\\1|tate r|a t| ae|rt r|e e",
    "yes": [
      "aerate aerate arrest errant serene tanner testes",
      "aerate assent assent assert rester retest tenant",
      "aerate assert rearer renter resent serene teaser",
      "aerate easter easter tenant tester testes tsetse",
      "arrest arrest easter entree errant resent senate",
      "assent assess assets estate resent staree teaser",
      "assert astern renter rerent resent staree street",
      "assert enseat entree errata rennet teaser tsetse",
      "assert rennet renter reseat rester serene tenant",
      "assess easter estate rennet rennet tenant testes",
      "assess easter estate rerent resent retest snarer",
      "assess renter renter searer seater snarer testes",
      "astern enseat entree serene staree tartar tartar",
      "astern rennet retest searer snarer tartar tester",
      "enseat errata seater senate strata teaser tsetse",
      "entree searer staree taster taster tenant testes",
      "rerent rester tanner tartar teaser teaser testes",
      "aerate astern assess enseat senate street tsetse",
      "aerate rennet errant enseat rerent senate testes",
      "arrest assess assess assent astern searer testes",
      "assert assess errata enseat earner seater serene",
      "assert astern staree senate snarer tanner tester",
      "assert strata rerent rerent tanner testes tsetse",
      "assess easter entree rester reseat seater tartar",
      "astern assets rearer rearer assess rearer testes",
      "astern easter taster serene reseat taster tester",
      "earner entree rerent reseat teaser strata staree",
      "earner errant estate taster reseat estate taster",
      "enseat astern arrest enseat searer seater tenant",
      "errant errant senate renter rearer street tsetse",
      "rennet rennet assent errant rester staree tester",
      "rennet snarer senate retest tanner tartar tsetse",
      "retest astern arrest tsetse strata senate tsetse",
      "searer errant teaser staree assess teaser tsetse"
    ],
    "no": []
  },
  {
    "problem": "Alphabetical",
    "expr": "[^et] ren|[er]( \\w+)\\1|(tat|r). r|a t| ae|e e",
    "yes": [
      "aerate aerate arrest errant serene tanner testes",
      "aerate assent assent assert rester retest tenant",
      "aerate assert rearer renter resent serene teaser",
      "aerate easter easter tenant tester testes tsetse",
      "arrest arrest easter entree errant resent senate",
      "assent assess assets estate resent staree teaser",
      "assert astern renter rerent resent staree street",
      "assert enseat entree errata rennet teaser tsetse",
      "assert rennet renter reseat rester serene tenant",
      "assess easter estate rennet rennet tenant testes",
      "assess easter estate rerent resent retest snarer",
      "assess renter renter searer seater snarer testes",
      "astern enseat entree serene staree tartar tartar",
      "astern rennet retest searer snarer tartar tester",
      "enseat errata seater senate strata teaser tsetse",
      "entree searer staree taster taster tenant testes",
      "rerent rester tanner tartar teaser teaser testes",
      "aerate astern assess enseat senate street tsetse",
      "aerate rennet errant enseat rerent senate testes",
      "arrest assess assess assent astern searer testes",
      "assert assess errata enseat earner seater serene",
      "assert astern staree senate snarer tanner tester",
      "assert strata rerent rerent tanner testes tsetse",
      "assess easter entree rester reseat seater tartar",
      "astern assets rearer rearer assess rearer testes",
      "astern easter taster serene reseat taster tester",
      "earner entree rerent reseat teaser strata staree",
      "earner errant estate taster reseat estate taster",
      "enseat astern arrest enseat searer seater tenant",
      "errant errant senate renter rearer street tsetse",
      "rennet rennet assent errant rester staree tester",
      "rennet snarer senate retest tanner tartar tsetse",
      "retest astern arrest tsetse strata senate tsetse",
      "searer errant teaser staree assess teaser tsetse"
    ],
    "no": []
  },
  {
    "problem": "Alphabetical",
    "expr": "s ren|[er]( \\w+)\\1|(tat|r). r|a t| ae|e e",
    "yes": [
      "aerate aerate arrest errant serene tanner testes",
      "aerate assent assent assert rester retest tenant",
      "aerate assert rearer renter resent serene teaser",
      "aerate easter easter tenant tester testes tsetse",
      "arrest arrest easter entree errant resent senate",
      "assent assess assets estate resent staree teaser",
      "assert astern renter rerent resent staree street",
      "assert enseat entree errata rennet teaser tsetse",
      "assert rennet renter reseat rester serene tenant",
      "assess easter estate rennet rennet tenant testes",
      "assess easter estate rerent resent retest snarer",
      "assess renter renter searer seater snarer testes",
      "astern enseat entree serene staree tartar tartar",
      "astern rennet retest searer snarer tartar tester",
      "enseat errata seater senate strata teaser tsetse",
      "entree searer staree taster taster tenant testes",
      "rerent rester tanner tartar teaser teaser testes",
      "aerate astern assess enseat senate street tsetse",
      "aerate rennet errant enseat rerent senate testes",
      "arrest assess assess assent astern searer testes",
      "assert assess errata enseat earner seater serene",
      "assert astern staree senate snarer tanner tester",
      "assert strata rerent rerent tanner testes tsetse",
      "assess easter entree rester reseat seater tartar",
      "astern assets rearer rearer assess rearer testes",
      "astern easter taster serene reseat taster tester",
      "earner entree rerent reseat teaser strata staree",
      "earner errant estate taster reseat estate taster",
      "enseat astern arrest enseat searer seater tenant",
      "errant errant senate renter rearer street tsetse",
      "rennet rennet assent errant rester staree tester",
      "rennet snarer senate retest tanner tartar tsetse",
      "retest astern arrest tsetse strata senate tsetse",
      "searer errant teaser staree assess teaser tsetse"
    ],
    "no": []
  },
  {
    "problem": "Alphabetical",
    "expr": "r sn|( t\\w+)\\1|(tat|r). r|a t| ae|e e",
    "yes": [
      "aerate aerate arrest errant serene tanner testes",
      "aerate assent assent assert rester retest tenant",
      "aerate assert rearer renter resent serene teaser",
      "aerate easter easter tenant tester testes tsetse",
      "arrest arrest easter entree errant resent senate",
      "assent assess assets estate resent staree teaser",
      "assert astern renter rerent resent staree street",
      "assert enseat entree errata rennet teaser tsetse",
      "assert rennet renter reseat rester serene tenant",
      "assess easter estate rennet rennet tenant testes",
      "assess easter estate rerent resent retest snarer",
      "assess renter renter searer seater snarer testes",
      "astern enseat entree serene staree tartar tartar",
      "astern rennet retest searer snarer tartar tester",
      "enseat errata seater senate strata teaser tsetse",
      "entree searer staree taster taster tenant testes",
      "rerent rester tanner tartar teaser teaser testes",
      "aerate astern assess enseat senate street tsetse",
      "aerate rennet errant enseat rerent senate testes",
      "arrest assess assess assent astern searer testes",
      "assert assess errata enseat earner seater serene",
      "assert astern staree senate snarer tanner tester",
      "assert strata rerent rerent tanner testes tsetse",
      "assess easter entree rester reseat seater tartar",
      "astern assets rearer rearer assess rearer testes",
      "astern easter taster serene reseat taster tester",
      "earner entree rerent reseat teaser strata staree",
      "earner errant estate taster reseat estate taster",
      "enseat astern arrest enseat searer seater tenant",
      "errant errant senate renter rearer street tsetse",
      "rennet rennet assent errant rester staree tester",
      "rennet snarer senate retest tanner tartar tsetse",
      "retest astern arrest tsetse strata senate tsetse",
      "searer errant teaser staree assess teaser tsetse"
    ],
    "no": []
  },
  {
    "problem": "Alphabetical",
    "expr": "( .+[ts]..)\\1|(tat|r). r|a t| ae|e e",
    "yes": [
      "aerate aerate arrest errant serene tanner testes",
      "aerate assent assent assert rester retest tenant",
      "aerate assert rearer renter resent serene teaser",
      "aerate easter easter tenant tester testes tsetse",
      "arrest arrest easter entree errant resent senate",
      "assent assess assets estate resent staree teaser",
      "assert astern renter rerent resent staree street",
      "assert enseat entree errata rennet teaser tsetse",
      "assert rennet renter reseat rester serene tenant",
      "assess easter estate rennet rennet tenant testes",
      "assess easter estate rerent resent retest snarer",
      "assess renter renter searer seater snarer testes",
      "astern enseat entree serene staree tartar tartar",
      "astern rennet retest searer snarer tartar tester",
      "enseat errata seater senate strata teaser tsetse",
      "entree searer staree taster taster tenant testes",
      "rerent rester tanner tartar teaser teaser testes",
      "aerate astern assess enseat senate street tsetse",
      "aerate rennet errant enseat rerent senate testes",
      "arrest assess assess assent astern searer testes",
      "assert assess errata enseat earner seater serene",
      "assert astern staree senate snarer tanner tester",
      "assert strata rerent rerent tanner testes tsetse",
      "assess easter entree rester reseat seater tartar",
      "astern assets rearer rearer assess rearer testes",
      "astern easter taster serene reseat taster tester",
      "earner entree rerent reseat teaser strata staree",
      "earner errant estate taster reseat estate taster",
      "enseat astern arrest enseat searer seater tenant",
      "errant errant senate renter rearer street tsetse",
      "rennet rennet assent errant rester staree tester",
      "rennet snarer senate retest tanner tartar tsetse",
      "retest astern arrest tsetse strata senate tsetse",
      "searer errant teaser staree assess teaser tsetse"
    ],
    "no": []
  },
  {
    "problem": "Alphabetical",
    "expr": "( .+[ts]..)\\1|(tat|r). r|a t|e .r",
    "yes": [
      "aerate aerate arrest errant serene tanner testes",
      "aerate assent assent assert rester retest tenant",
      "aerate assert rearer renter resent serene teaser",
      "aerate easter easter tenant tester testes tsetse",
      "arrest arrest easter entree errant resent senate",
      "assent assess assets estate resent staree teaser",
      "assert astern renter rerent resent staree street",
      "assert enseat entree errata rennet teaser tsetse",
      "assert rennet renter reseat rester serene tenant",
      "assess easter estate rennet rennet tenant testes",
      "assess easter estate rerent resent retest snarer",
      "assess renter renter searer seater snarer testes",
      "astern enseat entree serene staree tartar tartar",
      "astern rennet retest searer snarer tartar tester",
      "enseat errata seater senate strata teaser tsetse",
      "entree searer staree taster taster tenant testes",
      "rerent rester tanner tartar teaser teaser testes",
      "aerate astern assess enseat senate street tsetse",
      "aerate rennet errant enseat rerent senate testes",
      "arrest assess assess assent astern searer testes",
      "assert assess errata enseat earner seater serene",
      "assert astern staree senate snarer tanner tester",
      "assert strata rerent rerent tanner testes tsetse",
      "assess easter entree rester reseat seater tartar",
      "astern assets rearer rearer assess rearer testes",
      "astern easter taster serene reseat taster tester",
      "earner entree rerent reseat teaser strata staree",
      "earner errant estate taster reseat estate taster",
      "enseat astern arrest enseat searer seater tenant",
      "errant errant senate renter rearer street tsetse",
      "rennet rennet assent errant rester staree tester",
      "rennet snarer senate retest tanner tartar tsetse",
      "retest astern arrest tsetse strata senate tsetse",
      "searer errant teaser staree assess teaser tsetse"
    ],
    "no": []
  },
  {
    "problem": "Alphabetical",
    "expr": ".r.{32}r|a.{10}te|n.n..",
    "yes": [
      "aerate aerate arrest errant serene tanner testes",
      "aerate assent assent assert rester retest tenant",
      "aerate assert rearer renter resent serene teaser",
      "aerate easter easter tenant tester testes tsetse",
      "arrest arrest easter entree errant resent senate",
      "assent assess assets estate resent staree teaser",
      "assert astern renter rerent resent staree street",
      "assert enseat entree errata rennet teaser tsetse",
      "assert rennet renter reseat rester serene tenant",
      "assess easter estate rennet rennet tenant testes",
      "assess easter estate rerent resent retest snarer",
      "assess renter renter searer seater snarer testes",
      "astern enseat entree serene staree tartar tartar",
      "astern rennet retest searer snarer tartar tester",
      "enseat errata seater senate strata teaser tsetse",
      "entree searer staree taster taster tenant testes",
      "rerent rester tanner tartar teaser teaser testes",
      "aerate astern assess enseat senate street tsetse",
      "aerate rennet errant enseat rerent senate testes",
      "arrest assess assess assent astern searer testes",
      "assert assess errata enseat earner seater serene",
      "assert astern staree senate snarer tanner tester",
      "assert strata rerent rerent tanner testes tsetse",
      "assess easter entree rester reseat seater tartar",
      "astern assets rearer rearer assess rearer testes",
      "astern easter taster serene reseat taster tester",
      "earner entree rerent reseat teaser strata staree",
      "earner errant estate taster reseat estate taster",
      "enseat astern arrest enseat searer seater tenant",
      "errant errant senate renter rearer street tsetse",
      "rennet rennet assent errant rester staree tester",
      "rennet snarer senate retest tanner tartar tsetse",
      "retest astern arrest tsetse strata senate tsetse",
      "searer errant teaser staree assess teaser tsetse"
    ],
    "no": []
  },
  {
    "problem": "Alphabetical",
    "expr": "^(?!.* ((.*)t.* \\2[es]|(.*)s.* \\3[nr]|(.*)r.* \\4[en]))",
    "yes": [
      "aerate aerate arrest errant serene tanner testes",
      "aerate assent assent assert rester retest tenant",
      "aerate assert rearer renter resent serene teaser",
      "aerate easter easter tenant tester testes tsetse",
      "arrest arrest easter entree errant resent senate",
      "assent assess assets estate resent staree teaser",
      "assert astern renter rerent resent staree street",
      "assert enseat entree errata rennet teaser tsetse",
      "assert rennet renter reseat rester serene tenant",
      "assess easter estate rennet rennet tenant testes",
      "assess easter estate rerent resent retest snarer",
      "assess renter renter searer seater snarer testes",
      "astern enseat entree serene staree tartar tartar",
      "astern rennet retest searer snarer tartar tester",
      "enseat errata seater senate strata teaser tsetse",
      "entree searer staree taster taster tenant testes",
      "rerent rester tanner tartar teaser teaser testes",
      "aerate astern assess enseat senate street tsetse",
      "aerate rennet errant enseat rerent senate testes",
      "arrest assess assess assent astern searer testes",
      "assert assess errata enseat earner seater serene",
      "assert astern staree senate snarer tanner tester",
      "assert strata rerent rerent tanner testes tsetse",
      "assess easter entree rester reseat seater tartar",
      "astern assets rearer rearer assess rearer testes",
      "astern easter taster serene reseat taster tester",
      "earner entree rerent reseat teaser strata staree",
      "earner errant estate taster reseat estate taster",
      "enseat astern arrest enseat searer seater tenant",
      "errant errant senate renter rearer street tsetse",
      "rennet rennet assent errant rester staree tester",
      "rennet snarer senate retest tanner tartar tsetse",
      "retest astern arrest tsetse strata senate tsetse",
      "searer errant teaser staree assess teaser tsetse"
    ],
    "no": []
  },
  {
    "problem": "Alphabetical",
    "expr": "^(?!.*( .*)(t.*\\1[es]|s.*\\1[nr]|r.*\\1[en]))",
    "yes": [
      "aerate aerate arrest errant serene tanner testes",
      "aerate assent assent assert rester retest tenant",
      "aerate assert rearer renter resent serene teaser",
      "aerate easter easter tenant tester testes tsetse",
      "arrest arrest easter entree errant resent senate",
      "assent assess assets estate resent staree teaser",
      "assert astern renter rerent resent staree street",
      "assert enseat entree errata rennet teaser tsetse",
      "assert rennet renter reseat rester serene tenant",
      "assess easter estate rennet rennet tenant testes",
      "assess easter estate rerent resent retest snarer",
      "assess renter renter searer seater snarer testes",
      "astern enseat entree serene staree tartar tartar",
      "astern rennet retest searer snarer tartar tester",
      "enseat errata seater senate strata teaser tsetse",
      "entree searer staree taster taster tenant testes",
      "rerent rester tanner tartar teaser teaser testes",
      "aerate astern assess enseat senate street tsetse",
      "aerate rennet errant enseat rerent senate testes",
      "arrest assess assess assent astern searer testes",
      "assert assess errata enseat earner seater serene",
      "assert astern staree senate snarer tanner tester",
      "assert strata rerent rerent tanner testes tsetse",
      "assess easter entree rester reseat seater tartar",
      "astern assets rearer rearer assess rearer testes",
      "astern easter taster serene reseat taster tester",
      "earner entree rerent reseat teaser strata staree",
      "earner errant estate taster reseat estate taster",
      "enseat astern arrest enseat searer seater tenant",
      "errant errant senate renter rearer street tsetse",
      "rennet rennet assent errant rester staree tester",
      "rennet snarer senate retest tanner tartar tsetse",
      "retest astern arrest tsetse strata senate tsetse",
      "searer errant teaser staree assess teaser tsetse"
    ],
    "no": []
  }
]