{
  "expr": "^[a-z]+\\s*\\(\\s*\\w+\\s*=\\s*\\w+\\s*\\)$",
  "yes": [
    "function(a=b)",
    "hello(x=y)",
    "example ( var = value )",
    "test   ( param = data )",
    "compute(x=1)",
    "alpha ( beta = gamma )",
    "calc ( num = 123 )",
    "query( key = value )",
    "process( item = object )",
    "update( x = y )",
    "operation( input=output )",
    "string( key1=val2 )",
    "match  ( a = b )",
    "parse( word=string )",
    "method( name=variable )",
    "execute( task=job )",
    "init( start=end )",
    "build ( param = value )",
    "create( key=element )",
    "launch( alpha=omega )",
    "configure( set=reset )",
    "map( key=mapKey )",
    "reduce( data=output )",
    "transform( input=result )",
    "filter( condition=true )",
    "validate( rule=check )",
    "finalize( step=complete )",
    "draw( shape=circle )",
    "render( scene=frame )",
    "stream( source=dest )",
    "connect( node=network )",
    "assign( a=b )",
    "debug( level=high )",
    "trace( path=tracePath )",
    "inspect( element=dom )",
    "analyze( data=stats )",
    "log( entry=record )",
    "report( status=final )",
    "document( file=pdf )",
    "compile( code=build )",
    "encrypt( text=cipher )",
    "decrypt( cipher=text )",
    "serialize( obj=json )",
    "deserialize( json=obj )",
    "load( module=app )",
    "store( key=value )",
    "fetch( data=resource )",
    "compare( left=right )",
    "sort( list=array )",
    "shuffle( deck=cards )"
  ],
  "no": [
    "word(a!=b)",
    "function(a=b",
    "word a=b)",
    "word(a=b))",
    "(a=b)",
    "word(a=b)extra",
    "123word(a=b)",
    "word(a=b)c",
    "word(a=b) ",
    " word(a=b)",
    "word (a = b) ",
    "word(a = b",
    "word(a= b ) )",
    "word(a=b)(c=d)",
    "word(a=b)c",
    "word(a=b) (",
    "word(a=b) (c=d)",
    "word(a=b))",
    "word(a=b))(",
    "word((a=b))",
    "word(a=b)c",
    "word a=b",
    "word a = b",
    "word a = b )",
    "word(a=b",
    "word(a = b )",
    "word(a == b)",
    "word(a != b)",
    "word(a=b)c",
    "word(a=b) (c=d)",
    "word(a=b)extra",
    "word(a=b)(c=d)",
    "word(a=b)more",
    "word(a=b) (",
    "word(a=b) (c=d)",
    "word(a=b))",
    "word(a=b))(",
    "word(a=b) (c=d)",
    "word(a=b))c",
    "word(a=b))(",
    "word(a=b)more",
    "word(a=b) (",
    "word(a=b) (c=d)",
    "word(a=b))",
    "word(a=b))(",
    "word(a=b) (c=d)",
    "word(a=b))c"
  ]
}