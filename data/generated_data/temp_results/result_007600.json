{
  "expr": "([a-zA-Z]+[\\s]+(?:((static|virtual)[\\s]+))?[a-zA-Z<>0-9]+[\\s]+)(([a-zA-Z<>0-9]+)[\\s]+(.+))",
  "yes": [
    "public virtual Guid Id { get; set; }",
    "public long NumericId { get; set; }",
    "public Guid AccountId { get; set; }",
    "public string AccountCode { get; set; }",
    "public List<GroupDto> Groups { get; private set; }",
    "public Direction Direction { get; set; }",
    "private string Name { get; set; }",
    "protected static int Count { get; set; }",
    "internal decimal Price { get; set; }",
    "internal static readonly string Version = \"1.0\";",
    "public virtual int Calculate(int value) { return value; }",
    "protected int CalculateSum(int a, int b) { return a + b; }",
    "private List<int> numbers { get; set; }",
    "public const double Pi = 3.14159;",
    "private readonly Dictionary<string, int> data;",
    "public static string Format(string input) { return input.Trim(); }",
    "public virtual async Task<int> GetCountAsync() { return 0; }",
    "public static void Print(string message) { Console.WriteLine(message); }",
    "protected static async Task<string> FetchDataAsync() { return \"data\"; }",
    "public static List<string> GetList() { return new List<string>(); }",
    "private static readonly object locker = new object();",
    "public async Task ExecuteAsync() { await Task.Delay(1000); }",
    "internal static int MaxValue { get; set; }",
    "public static readonly TimeSpan Timeout = TimeSpan.FromSeconds(30);",
    "protected virtual string Description { get; set; }",
    "public DateTime CreatedDate { get; set; }",
    "private static int Increment(int value) { return value + 1; }",
    "internal static DateTime Now => DateTime.UtcNow;",
    "public virtual string ToString() { return base.ToString(); }",
    "internal async Task SaveAsync() { await Task.CompletedTask; }",
    "public int Age { get; set; }",
    "private static Task LogAsync(string message) { return Task.CompletedTask; }",
    "protected virtual double CalculateArea(double radius) { return Math.PI * radius * radius; }",
    "internal static string FormatDate(DateTime date) { return date.ToString(\"yyyy-MM-dd\"); }",
    "public virtual List<int> GetNumbers() { return new List<int>(); }",
    "private static CancellationTokenSource cts;",
    "internal string FullName { get; set; }",
    "protected static string DefaultName { get; set; }",
    "public virtual void Configure() { /* Configuration logic */ }",
    "private static readonly Regex emailRegex = new Regex(\"^[^@]+@[^@]+\\.[^@]{2,}$\");",
    "internal static void Reset() { /* Reset logic */ }",
    "protected async Task<bool> ValidateAsync() { return true; }",
    "public virtual T GetValue<T>() { return default(T); }",
    "internal static List<T> CreateList<T>() { return new List<T>(); }",
    "private static readonly Uri baseUri = new Uri(\"http://example.com\");",
    "public static bool IsValid(string input) { return !string.IsNullOrEmpty(input); }",
    "internal virtual void Initialize() { /* Initialization logic */ }",
    "public static int Add(int a, int b) { return a + b; }",
    "protected static T GetDefault<T>() { return default(T); }"
  ],
  "no": [
    "public virtual",
    "long { get; set; }",
    "public string",
    "public List<> Groups { get; set; }",
    "public Direction",
    "private static",
    "protected readonly { get; set; }",
    "internal decimal",
    "static readonly string = \"1.0\";",
    "public int Calculate()",
    "protected int Sum(int a, int b)",
    "private List<> numbers { get; set; }",
    "const double = 3.14159;",
    "private readonly Dictionary<>;",
    "public static Format(string input)",
    "public async Task<int> GetCountAsync()",
    "public void Print(string message)",
    "protected async Task<> FetchDataAsync()",
    "public List<string> GetList()",
    "readonly object locker = new object();",
    "async Task ExecuteAsync()",
    "internal static MaxValue { get; set; }",
    "public static TimeSpan Timeout = TimeSpan.FromSeconds(30);",
    "protected string Description { get; set; }",
    "public DateTime { get; set; }",
    "private static Increment(int value)",
    "internal Now => DateTime.UtcNow;",
    "public string ToString()",
    "internal async SaveAsync()",
    "public Age { get; set; }",
    "private Task LogAsync(string message)",
    "protected double CalculateArea(double radius)",
    "internal static FormatDate(DateTime date)",
    "public virtual GetNumbers()",
    "private static CancellationTokenSource;",
    "internal FullName { set; }",
    "protected DefaultName { get; set; }",
    "public Configure()",
    "private Regex emailRegex;",
    "internal Reset()",
    "protected async Task ValidateAsync()",
    "public T GetValue()",
    "internal static List CreateList()",
    "private Uri baseUri = new Uri();",
    "public IsValid(string input)",
    "internal virtual Initialize()",
    "public Add(int a, int b)",
    "protected GetDefault()"
  ]
}