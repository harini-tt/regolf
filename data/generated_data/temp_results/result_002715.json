{
  "expr": "^(.*?)\\(",
  "yes": [
    "function_call(param1, param2)",
    "calculate(5, 10)",
    "sum(1,2,3)",
    "average(4,5,6)",
    "min(0, 1)",
    "max(7, 8, 9)",
    "product(a, b, c)",
    "concat('str1', 'str2')",
    "print('Hello, World!')",
    "log(message)",
    "runProcess()",
    "doSomething(42)",
    "parse(data)",
    "split('a,b,c', ',')",
    "trim('  text  ')",
    "replace('a', 'b')",
    "find(item)",
    "filter(x -> x > 5)",
    "map(x -> x * 2)",
    "reduce((acc, val) -> acc + val)",
    "sort(array)",
    "reverse(list)",
    "join(['a', 'b', 'c'])",
    "indexOf(element)",
    "contains(substring)",
    "toUpperCase(str)",
    "toLowerCase(str)",
    "charAt(0)",
    "substring(1, 4)",
    "delete(item)",
    "removeWhitespace(text)",
    "getValue(key)",
    "setValue(key, value)",
    "updateRecord(id)",
    "insertRow(data)",
    "deleteRow(id)",
    "clear()",
    "empty()",
    "isEmpty()",
    "isNotEmpty()",
    "getLength()",
    "isValid()",
    "checkStatus()",
    "validateInput(input)",
    "sanitize(text)",
    "escapeHTML(html)",
    "decodeURI(uri)",
    "encodeURI(uri)",
    "hash(password)"
  ],
  "no": [
    "",
    "no parentheses here",
    "text without function",
    "just a string",
    "random_text",
    "1234567890",
    "special_characters!@#$%",
    "noFunctionCall",
    "anotherString",
    "empty()string",
    "brackets[]",
    "curly{braces}",
    "angle<tags>",
    "xml<element>",
    "json{\"key\": \"value\"}",
    "yaml: key: value",
    "html<div>",
    "css{property: value;}",
    "js[0]",
    "py(list)",
    "no-match",
    "miss()match",
    "false positive(",
    "almost)there",
    "missing(parens",
    "close)first",
    "open(first",
    "'single quotes'",
    "\"double quotes\"",
    "just a number 123",
    "math 1+1=2",
    "symbol #hashtag",
    "email@example.com",
    "url http://example.com",
    "path /usr/local/bin",
    "file.txt",
    "directory/",
    "command -option",
    "parameter=value",
    "option: value",
    "word: definition",
    "title - subtitle",
    "section > sub-section",
    "quote 'quoted text'",
    "comment /* comment */"
  ]
}