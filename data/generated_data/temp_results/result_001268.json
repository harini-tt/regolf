{
  "expr": "<script.*?>.*?<\\/script>",
  "yes": [
    "<script></script>",
    "<script>alert('Hello!');</script>",
    "<script type='text/javascript'>var a = 5;</script>",
    "<script src='script.js'></script>",
    "<script>console.log('test');</script>",
    "<script>if(true){console.log('yes');}</script>",
    "<script>function test() { return true; }</script>",
    "<script>a = 10;</script>",
    "Some text <script>let x = 10;</script> more text",
    "<script type='text/javascript' src='file.js'></script>",
    "<script id='main'>doSomething();</script>",
    "<script class='test'>console.log('hello');</script>",
    "<script defer>loadData();</script>",
    "<script async>fetchData();</script>",
    "<script type='module'>import { x } from 'y';</script>",
    "<script><!-- Comment --></script>",
    "<script>/* Multi-line \n comment */</script>",
    "<script>\nconsole.log('multi-line');\n</script>",
    "<script>eval('console.log(\"eval\");');</script>",
    "<script>document.write('<p>Text</p>');</script>",
    "<script>window.alert('alert');</script>",
    "<script>setTimeout(() => alert('timeout'), 1000);</script>",
    "<script>try { throw Error('error'); } catch(e) {}</script>",
    "<script>const regex = /<script>/;</script>",
    "<script>var data = `<script>example</script>`;</script>",
    "<script>function example() { return '<script>'; }</script>",
    "<script>let str = '</script>';</script>",
    "<script>let x = `<script></script>`;</script>",
    "<script>let template = `${x}`;</script>",
    "<script>let x = '<script></script>';</script>",
    "<script>function x() { return '<script></script>'; }</script>",
    "<script>let x = '</script>';</script>",
    "<script>if (x === '<script></script>') {}</script>",
    "<script>let x = '<script>';</script>",
    "<script>let x = '</script>';</script>",
    "<script>if (a < b) { console.log('less'); }</script>",
    "<script>while (true) { break; }</script>",
    "<script>for (let i = 0; i < 10; i++) {}</script>",
    "<script>switch(x) { case '1': break; }</script>",
    "<script>const obj = { key: 'value' };</script>",
    "<script>let arr = [1, 2, 3];</script>",
    "<script>let a = `</script>`;</script>",
    "<script>let a = `</script>`;</script>",
    "<script>let a = `</script>`;</script>",
    "<script>let a = `</script>`;</script>",
    "<script>let a = `</script>`;</script>",
    "<script>let a = `</script>`;</script>",
    "<script>let a = `</script>`;</script>",
    "<script>let a = `</script>`;</script>",
    "<script>let a = `</script>`;</script>"
  ],
  "no": [
    "",
    "<script>",
    "</script>",
    "<script>",
    "script",
    "<script alert('Not closed!');",
    "<script>console.log('Unclosed script')",
    "<scrip>console.log('Typo in tag');</scrip>",
    "Some text <script> and more text",
    "<script><script></script>",
    "<script></scipt>",
    "<scrpt>console.log('Typo')</scrpt>",
    "Just some text",
    "<script/>",
    "<script>alert('test')<script>",
    "<script",
    "<script>alert('Almost closed')</>",
    "<script>alert('Missing close tag')",
    "Some <tag> inside text",
    "Random text < with symbols",
    "Another random string",
    "<div><script></div>",
    "<!-- <script>commented out</script> -->",
    "<tag>Not a script</tag>",
    "<scriptalert('not a tag')",
    "<script type=text/javascript>no quotes</script>",
    "<script>alert('No end tag')",
    "<script console.log('Missing closing')",
    "<script 'invalid attribute'></script>",
    "<style>body { color: 'red'; }</style>",
    "<link rel='stylesheet' href='style.css'>",
    "<meta charset='UTF-8'>",
    "<html><head></head><body></body></html>",
    "<body><p>Paragraph</p></body>",
    "function() { return '<script>'; }",
    "<script>function() { return; }</script",
    "<script>function() { return; </script>",
    "Non-matching string",
    "<script>let x = '</script></script>'",
    "<script>let x = '</script></script'",
    "<script>alert('test');</script",
    "<script>alert('test');<script>",
    "function example() { return '</script>'; }",
    "<script>let y = '<script></script>'</script>",
    "<script>let y = '<script></script>'",
    "<script>let y = '<script></script'",
    "<script>let y = '<script</script>'",
    "<script>let y = '<script/script>'"
  ]
}