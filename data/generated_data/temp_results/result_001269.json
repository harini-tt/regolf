{
  "expr": "[^`()]+",
  "yes": [
    "WORKS: select everything except for parentheses:",
    "selected selectedselected",
    "NOT WORKING: include escaped parentheses in the selection.",
    "It should include \\( these \\) parentheses, because they are escaped.",
    "Hello, World!",
    "1234567890",
    "email@example.com",
    "No parentheses here",
    "Space and tab\tallowed",
    "Special characters !@#$%^&*",
    "Under_score and-hyphen",
    "Quotes \"single\" and 'double'",
    "Curly braces {} and square brackets []",
    "Colon: semicolon; period. comma,",
    "Question? Exclamation!",
    "Escape sequences \\n \\t \\r",
    "Completely safe text",
    "Random text without (",
    "Another line without )",
    "Mixed123With456Numbers",
    "Words: apple, banana, cherry",
    "Simple text line",
    "Just another example",
    "Lorem ipsum dolor sit amet",
    "Consectetur adipiscing elit",
    "sed do eiusmod tempor",
    "incididunt ut labore",
    "et dolore magna aliqua",
    "Ut enim ad minim veniam",
    "quis nostrud exercitation",
    "ullamco laboris nisi ut",
    "aliquip ex ea commodo",
    "consequat duis aute irure",
    "dolor in reprehenderit",
    "in voluptate velit esse",
    "cillum dolore eu fugiat",
    "nulla pariatur excepteur",
    "sint occaecat cupidatat non",
    "proident sunt in culpa",
    "qui officia deserunt mollit",
    "anim id est laborum",
    "Another simple line",
    "This is a test",
    "Running more tests",
    "Checking more examples",
    "Example with numbers 1 2 3",
    "Symbols < > ? : ;",
    "Combining various elements",
    "Ensuring coverage",
    "Final simple example"
  ],
  "no": [
    "()",
    "(text)",
    "text)",
    "(text",
    "())",
    "(()",
    "(())",
    "(()))",
    "((())",
    "())(",
    ")(text",
    "(text)(more)",
    "text(text",
    "(text)text",
    "(text (more)",
    "text (text)",
    "(text",
    "text)",
    "text(text)",
    "(text text)",
    "text (text",
    "text text)",
    "(text more text)",
    "(text) more text",
    "more (text",
    "more text)",
    "(text more",
    "more text)",
    "text (more text)",
    "(more text) text",
    "text (more) text",
    "(text)more",
    "more(text)",
    "(more)text",
    "text(more)",
    "more(text)more",
    "(more text)",
    "(more text",
    "more text)",
    "text (more",
    "text more)",
    "text (text) text",
    "text(text)text",
    "(text)text(text)",
    "text(text(more))",
    "(text(more)text)"
  ]
}