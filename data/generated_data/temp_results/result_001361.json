{
  "expr": "^[a-zA-Z0-9!@#$%^&*()\\[\\]{};'\u2019`\\-\\\\:,.\\/<>?| ]{60,150}$",
  "yes": [
    "For example we wouldn`t want a &@* :- user to have to wait for their new user signup email to get emailed to them.",
    "This is a test string with enough length and valid characters to pass the regex pattern, including numbers 1234567890.",
    "A string with various symbols like !@#$%^&*()[]{};'`:,.<>?| - all within the allowed character set.",
    "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()[]{};'`-\\:,.<>?|",
    "A very long string that just barely meets the length requirement and includes symbols & characters properly.",
    "Sixty characters exactly! Including: numbers1234567890 and symbols like: !@#",
    "Here's a mix of characters: abcXYZ123!@#[]{};':,.<>? with a valid length of 75.",
    "A string containing spaces and punctuation, like this one here: it should match perfectly!",
    "This string has 100 characters exactly, including numbers 0123456789 and special symbols like @#%!",
    "Long string with allowed characters: aA1!@#$%^&*()[]{};'`-\\:,.<>?| repeated several times to match.",
    "Valid: email addresses like example@domain.com are not here, but similar symbols are.",
    "Symbols & numbers mixed: 1a2b3c!@#$%^&*()[]{};'`-\\:,.<>?| to create a valid, long string.",
    "Spaces and punctuation like: this, are included properly to form a valid string (lengthy one).",
    "A complex string: {with} [many] (characters) including; numbers, symbols, and letters!",
    "Mixing everything: abcDEFG12345!@#$%^&*()[]{};'`-\\:,.<>?| to form a valid pattern match.",
    "This string includes everything from the allowed set, with spaces and enough length to match.",
    "Creating a diverse string with characters like !@#$%^&*()[]{};'`-\\:,.<>?| and valid length.",
    "Ensuring the string length is valid, with characters like abc123!@#$%^&*()[]{};'`-\\:,.<>?|.",
    "A valid mix: abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!@#$%^&*()[]{};'`-\\:,.<>?|",
    "Another example with enough characters to match, full of letters, numbers, and symbols!",
    "Perfectly crafted string with 150 characters: abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!@#$%^&*()[]{};'`-\\:,.<>?|",
    "A string that uses all characters within the allowed set and is long enough to fulfill the criteria.",
    "Valid string with punctuation, symbols, numbers, and letters: it should match easily.",
    "Characters like !@#$%^&*()[]{};'`-\\:,.<>?| are included properly and spaced out for validity.",
    "A continuous stream of valid characters: abc123!@#$%^&*()[]{};'`-\\:,.<>?| with proper length.",
    "The perfect balance of symbols, numbers, and letters to match the regex without issues.",
    "Long enough and proper: this string uses all allowed characters and has a valid length.",
    "Realistic string with spaces and characters: abcXYZ123!@#$%^&*()[]{};'`-\\:,.<>?|",
    "A string full of characters: abcDEF123!@#$%^&*()[]{};'`-\\:,.<>?| with correct length.",
    "Plenty of valid characters, including symbols and numbers, forming a long enough string.",
    "Spaces, numbers, and punctuation: a valid string that meets the regex pattern's conditions.",
    "An assortment of characters: abcXYZ123!@#$%^&*()[]{};'`-\\:,.<>?| with proper length.",
    "A lengthy example that is full of various valid characters, ensuring it matches perfectly.",
    "Here's a string with 150 characters: abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!@#$%^&*()[]{};'`-\\:,.<>?|",
    "The ideal mix of everything: numbers, symbols, and letters, forming a valid string to match.",
    "A well-crafted string that includes symbols, numbers, and letters in proper length.",
    "Testing the regex with a string full of valid characters: abc123!@#$%^&*()[]{};'`-\\:,.<>?|",
    "This string should match as it contains all valid characters and has a proper length.",
    "Meeting all criteria: a long string with numbers, letters, and symbols in the allowed set.",
    "Characters arranged properly: abc123!@#$%^&*()[]{};'`-\\:,.<>?| in a valid string length.",
    "The perfect combination of everything: letters, numbers, symbols, and a valid length.",
    "Ensuring the string matches by including all valid characters and having enough length.",
    "A realistic example with spaces, numbers, symbols, and letters that matches the regex.",
    "Using the allowed set of characters, this string is long enough to match the pattern.",
    "A comprehensive mix of characters that forms a string matching the given regex pattern.",
    "Symbols, numbers, letters, and spaces: a string that perfectly matches the regex constraints.",
    "This string is crafted to match the regex by including all valid characters and the right length.",
    "A valid string that includes all allowed symbols, numbers, and letters in a proper format.",
    "Long and filled with valid characters: abc123!@#$%^&*()[]{};'`-\\:,.<>?| ensuring it matches."
  ],
  "no": [
    "",
    "Short",
    "Too long string that exceeds the maximum length allowed by the regex pattern, which is 150 characters. This string has more than 150 characters and will not match.",
    "Special characters not allowed: ~%&",
    "Including a tab\tcharacter",
    "A string with newline\ncharacter",
    "Using backspace\bcharacter",
    "String with non-ASCII: caf\u00e9",
    "Only!@#$%^&*()[]{};'`-\\:,.<>?| with short length",
    "String with pipe | alone",
    "This, string, has, too, many, commas, and, is, too, short, to, match",
    "Invalid characters: `~",
    "Missing spaces and punctuation marks to meet the criteria.",
    "1234567890 just numbers without enough length",
    "A string that ends with a space ",
    "A string that starts with a space",
    "Using invalid characters like \u00f1 or \u00fc",
    "Having a length of 59 chars only",
    "abcdefghij123!@#$%^&*()[]{};'`-\\:,.<>?| but too short",
    "An empty string with no content",
    "abcdefghij1234567890!@#$%^&*()[]{};'`-\\:,.<>?| but short",
    "String with emoji \ud83d\ude0a",
    "Too short string",
    "String with only letters abcdefghijkl",
    "String with only spaces                                                          ",
    "Including control character \u0001",
    "Lowercase letters only, with no numbers or symbols",
    "A string that repeats a pattern too much, exceeding length: abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc",
    "String with quotes \" \"",
    "A string with brackets < >",
    "Single character: a",
    "Invalid sequence of characters like ><",
    "A very short string",
    "This string contains a mix of valid and invalid characters like ~ and is too short",
    "String with multiple tabs\t\t\t",
    "String with only numbers 1234567890",
    "Spaces only:                                                                                           ",
    "This string has non-matching characters like `~%& and is quite short",
    "Short string with symbols: !@#",
    "A string of 151 characters, exceeding limit: abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()[]{};'`-\\:,.<>?|aaaaaaaaaaaa",
    "A string that contains, commas, but is too short, overall",
    "String with a newline character\nhere",
    "Non-ASCII characters mixed in: \u00f1\u00e7",
    "Ends with a space ",
    "String with less than 60 characters",
    "Special characters not in set: ~%&",
    "Single letter: B",
    "String with non-matching brackets: {]}"
  ]
}