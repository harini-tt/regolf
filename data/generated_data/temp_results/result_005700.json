{
  "expr": "(assertTrue)(.+?)( ==)",
  "yes": [
    "$this->assertTrue($post->item_id == $actionItem->id);",
    "$this->assertTrue($post->action == 'edited');",
    "$this->assertTrue($post->type == 'Action Item');",
    "$this->assertTrue($post->title == $actionItem->title);",
    "assertTrue(5 + 3 == 8)",
    "assertTrue(user.isLoggedIn() == true)",
    "assertTrue(a == b)",
    "assertTrue(x.getValue() == y.getValue())",
    "assertTrue((x + y) == (a + b))",
    "assertTrue(result == expected)",
    "assertTrue(response == 200)",
    "assertTrue(variable == constant)",
    "assertTrue(0 == 0)",
    "assertTrue(abc123 == abc123)",
    "assertTrue(foo == bar)",
    "assertTrue('string' == 'string')",
    "assertTrue(\"x\" == \"y\")",
    "assertTrue(null == null)",
    "assertTrue(array[0] == value)",
    "assertTrue(dict['key'] == 100)",
    "assertTrue(getObject().equals(other) == false)",
    "assertTrue(5 == 5)",
    "assertTrue('a' == 'b')",
    "assertTrue(3.14 == 3.14)",
    "assertTrue('match' == 'match')",
    "assertTrue(list.length == 10)",
    "assertTrue(data[index] == 42)",
    "assertTrue(age == 21)",
    "assertTrue(isValid == true)",
    "assertTrue(hasAccess == false)",
    "assertTrue(count == maxCount)",
    "assertTrue(flag == true)",
    "assertTrue(temperature == 98.6)",
    "assertTrue(isComplete == true)",
    "assertTrue(status == 'active')",
    "assertTrue(node.value == null)",
    "assertTrue('5' == '5')",
    "assertTrue('yes' == 'no')",
    "assertTrue('1' == 1)",
    "assertTrue('end' == 'start')",
    "assertTrue('assert' == 'assert')",
    "assertTrue('assertTrue' == 'assertTrue')",
    "assertTrue(expression == true)",
    "assertTrue(comparison == false)",
    "assertTrue(' ' == ' ')",
    "assertTrue('empty' == 'empty')",
    "assertTrue(' ' == 'space')",
    "assertTrue('word' == 'word')",
    "assertTrue('sentence' == 'sentence')",
    "assertTrue('character' == 'character')"
  ],
  "no": [
    "assertTrue5 == 5",
    "assertTrue(a = b)",
    "assertTrue(a===b)",
    "assertTrue(a!=b)",
    "assertTrue(a>b)",
    "assertTrue(a<b)",
    "assertTrue(a>=b)",
    "assertTrue(a<=b)",
    "assertTrue $post->item_id = $actionItem->id;",
    "assertTrue $post->action = 'edited';",
    "assertTrue $post->type = 'Action Item';",
    "assertTrue $post->title = $actionItem->title;",
    "assertFalse(a == b)",
    "assertNull(a == b)",
    "assertTrue()",
    "assertTrue(a == )",
    "assertTrue() == ",
    "assertTrue(a)",
    "assertTrue == a",
    "assertTrue(a == b",
    "assertTrue a == b",
    "assert True(a == b)",
    "assertTrue(a == b);",
    "assertEquals(a, b)",
    "assert(a == b)",
    "assertTrue(a.equals(b))",
    "assertTrue(a.compareTo(b) == 0)",
    "assertTrue(a == b || c == d)",
    "assertTrue(a == b && c == d)",
    "assertTrue(a == b ? true : false)",
    "assertTrue(a == b, 'msg')",
    "assertTrue(a == b, c == d)",
    "assertTrue(a)",
    "assertTrue(a == b) && assertTrue(c == d)",
    "assertTrue(a == b || c == d)",
    "assertTrue(a == b, 'message')",
    "assertTrue(a, b == c)",
    "assertTrue(a == b) assertTrue(c == d)",
    "assertTrue(a == b) assertTrue(c == d)",
    "assertTrue(a == b); assertTrue(c == d)",
    "assertTrue(a == b) some text",
    "assertTrue(a == b) more text",
    "assertTrue(a == b) text",
    "assertTrue(a == b) text text",
    "assertTrue(a == b) end text",
    "assertTrue(a == b); more",
    "assertTrue(a == b); continue",
    "assertTrue(a == b); ending",
    "assertTrue(a == b) start",
    "assertTrue(a == b) finish",
    "assertTrue(a == b) done"
  ]
}