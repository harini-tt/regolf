{
  "expr": "(^\\t*)(\\/\\*\\*\\n\\s*\\*\\s.*)((?:\\n\\s*\\*(?!\\s@since).*)*)\\/",
  "yes": [
    "\t/**\n * Simple comment\n */",
    "/**\n * Another comment\n * With multiline\n */",
    "/**\n * Single line\n */",
    "\t/**\n * Indented comment\n * Without @since\n */",
    "/**\n * Testing regex\n * Multiple lines\n * More text\n */",
    "/**\n * Example comment block\n */",
    "/**\n * This is a test\n */",
    "/**\n * @param string $name\n */",
    "/**\n * Function to test\n * with regex\n */",
    "/**\n * Multi-line\n * description\n */",
    "\t/**\n * Indented with tabs\n * multiline\n */",
    "/**\n * Simple\n * Block\n */",
    "/**\n * Comment\n * Block\n */",
    "/**\n * Without\n * Since tag\n */",
    "/**\n * API Documentation\n */",
    "/**\n * No @since tag\n */",
    "/**\n * Example function\n * @return void\n */",
    "/**\n * Example\n * with\n * multiple lines\n */",
    "/**\n * Another\n * simple\n * example\n */",
    "/**\n * Testing\n * without since\n */",
    "/**\n * Just a comment\n */",
    "/**\n * Another comment\n * block\n */",
    "\t/**\n * Tab indented\n * block\n */",
    "/**\n * Valid\n * comment\n */",
    "/**\n * Documentation\n * for API\n */",
    "/**\n * Multi-line\n * comment\n */",
    "/**\n * Testing\n * comments\n * again\n */",
    "/**\n * No special tags\n */",
    "/**\n * Simple example\n */",
    "/**\n * Function documentation\n */",
    "/**\n * Testing case\n */",
    "/**\n * Multiple\n * line\n * comment\n */",
    "/**\n * Single line\n */",
    "/**\n * Another single line\n */",
    "/**\n * Comment block\n */",
    "/**\n * Testing blocks\n */",
    "/**\n * Multiline\n * comment\n */",
    "/**\n * No since tag\n */",
    "/**\n * Different\n * lines\n */",
    "/**\n * Documentation\n */",
    "/**\n * Multiline\n * example\n */",
    "/**\n * Another\n * block\n */",
    "/**\n * Regex\n * testing\n */",
    "/**\n * Just testing\n */",
    "/**\n * Simple block\n */",
    "/**\n * Multiline block\n */",
    "/**\n * No @since tag here\n */",
    "/**\n * Testing\n * without\n * @since\n */",
    "/**\n * Multiple lines\n */",
    "/**\n * Block comment\n */"
  ],
  "no": [
    "",
    "/* Simple comment */",
    "/** No newline * comment */",
    "/**\n *\n * @since version\n */",
    "/**\n * This has @since\n */",
    "/**\n * Invalid * comment\n */",
    "/**\n *\n@since\n */",
    "/**\n *\n@since version\n */",
    "Just a text",
    "/**\n * @since tag present\n */",
    "/**\n * Starts with @since\n @since version\n */",
    "/**\n * @since\n */",
    "/**\n *\n * @since\n * */",
    "/**\n *\n@since\n */",
    "/**\n *\n * @since 1.0\n */",
    "Another text",
    "/**\n * No closing",
    "/**\n * Mismatch */",
    "/** Open only",
    "\n/**\n* Invalid newline\n*/",
    "/**\n * Comment @since\n */",
    "/**\n *\n@since tag\n */",
    "/**\n * Missing end tag",
    "\n/**\n * Newline at start\n */",
    "/**\n * @since included\n */",
    "\n/**\n *\n@since 1.1\n */",
    "/**\n * @since 2.0\n */",
    "/**\n *\n *\n * @since\n */",
    "/**\n * Single line */",
    "/**\n * No proper end",
    "/* Not a Javadoc */",
    "/**\n * @since present\n */",
    "/**\n * Ends with @since\n * @since\n */",
    "/**\n *\n * @since present\n */",
    "/**\n *\n * @since here\n */",
    "Random text",
    "/**\n * Invalid ending\n",
    "/**\n * @since in comment\n */",
    "/**\n * Comment inside @since\n */",
    "/**\n * @since\n * */",
    "/**\n * No valid end",
    "/* Just a comment */",
    "/**\n * With @since\n */",
    "/**\n * @since 1.2\n */",
    "/**\n * Ends improperly",
    "/**\n * @since detected\n */",
    "/**\n * Incomplete block",
    "/**\n *\n * @since\n */"
  ]
}