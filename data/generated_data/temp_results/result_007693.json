{
  "expr": "^\\s*?((?:virtual\\s*|const\\s*|friend\\s*){0,3})\\s*([\\w]*?)\\s*\\w+\\s*::\\s*([\\w]+)\\s*(\\(.*\\))\\s*(const)?\\s*[{|:]",
  "yes": [
    "virtual MyClass :: functionName(int a, int b) {",
    "const Type :: MethodName() const {",
    "friend ClassName :: methodName(paramType param) {",
    "virtual const friend SomeClass :: complexMethod() const {",
    "MyClass :: methodName() :",
    "virtual const Class :: methodName() {",
    "const MyClass :: myFunction(paramType param) {",
    "friend TypeName :: funcName() {",
    "MyClass :: methodName(int a, int b) :",
    "const MyClass :: myMethod() const {",
    "virtual SomeClass :: someMethod() {",
    "const AnotherClass :: anotherFunction() {",
    "friend AnotherType :: anotherMethod() {",
    "Type :: method() :",
    "Type :: method() {",
    "friend const MyClass :: anotherMethod() const {",
    "MyClass :: myMethod() {",
    "virtual MyClass :: virtualMethod() const {",
    "const virtual MyClass :: constVirtualMethod() {",
    "ClassName :: func() :",
    "ClassName :: func() {",
    "virtual MyClass :: virtualFunc() {",
    "const MyClass :: constFunc() :",
    "friend MyClass :: friendFunc() {",
    "MyClass :: anotherFunc() :",
    "ClassName :: anotherFunc() {",
    "virtual MyClass :: yetAnotherFunc() :",
    "const MyClass :: yetAnotherFunc() const {",
    "friend MyClass :: yetAnotherFunc() {",
    "ClassName :: differentFunc() {",
    "MyClass :: differentFunc() :",
    "virtual MyClass :: coolMethod() {",
    "const MyClass :: coolMethod() :",
    "MyClass :: methodWithParams(int x, int y) :",
    "MyClass :: functionWithReturnType() :",
    "friend MyClass :: methodWithInitList() :",
    "virtual MyClass :: methodWithBraces() {",
    "const MyClass :: methodWithBraces() const :",
    "friend MyClass :: methodWithColon() :",
    "MyClass :: initMethod() {",
    "virtual MyClass :: initMethod() :",
    "const MyClass :: initMethod() const {",
    "friend MyClass :: initMethod() {",
    "MyClass :: initMethodWithParams(int a) {",
    "virtual MyClass :: initMethodWithParams(int a) :",
    "const MyClass :: initMethodWithParams(int a) const {",
    "friend MyClass :: initMethodWithParams(int a) {",
    "virtual MyClass :: complexMethod(int a, int b, int c) {",
    "const MyClass :: complexMethod(int a, int b, int c) :",
    "friend MyClass :: complexMethod(int a, int b, int c) {"
  ],
  "no": [
    "MyClass functionName(int a, int b) {",
    ":: methodName() const {",
    "virtual MyClass functionName() {",
    "constMethodName",
    "friendMethodName",
    "MyClass methodName() {",
    "MyClass :: (int a, int b) {",
    "::",
    "virtual :: MethodName() {",
    "const MyClass methodName() {",
    "friend MyClass methodName() {",
    "ClassName methodName() {",
    "MyClass methodName() {",
    "MyClass methodName() :",
    "virtual MyClass MethodName() {",
    "const void MyClass MethodName() {",
    "friend void MyClass MethodName() {",
    "MyClass : methodName() {",
    "MyClass :: methodName()",
    "TypeName methodName() {",
    "MyClass methodName()",
    "virtual MyClass :: methodName",
    "const MyClass methodName :",
    "friend MyClass methodName :",
    "MyClass :: methodName {",
    "virtual MyClass MethodName {",
    "const MyClass MethodName :",
    "friend MyClass methodName()",
    "MyClass :: methodName()",
    "className methodName() {",
    "virtual MyClass methodName()",
    "const MyClass methodName()",
    "friend MyClass methodName()",
    "MyClass methodName() {",
    "MyClass MethodName() {",
    ":: methodName() {",
    "virtual MyClass() {",
    "const MyClass() {",
    "friend MyClass() {",
    "MyClass() {",
    "MyClass() :",
    "MyClass {",
    "MyClass :: () {",
    "virtual MyClass {",
    "const MyClass :",
    "friend MyClass {",
    "MyClass methodName() {}",
    "MyClass methodName() :"
  ]
}