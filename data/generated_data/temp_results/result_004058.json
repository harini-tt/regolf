{
  "expr": "\\s*comb\\s*:\\s*process\\s*\\((.*?)\\)",
  "yes": [
    "comb : process ()",
    "comb:process(i_desc_mngr,r)",
    " comb : process ( a, b, c ) ",
    "comb: process(x)",
    "comb :process(y,z)",
    "comb:process()",
    "comb :process( )",
    "comb : process (single_param)",
    " comb:process( multiple, parameters, here ) ",
    "\tcomb\t:\tprocess\t(param1, param2)\t",
    "comb: process ( )",
    "comb : process(arg1,arg2,arg3)",
    "comb:process(param1)",
    "  comb : process (param)  ",
    "comb :process( )",
    "comb:process(param1,param2)",
    "comb : process(a,b)",
    "comb: process( )",
    "  comb:process( parameter )  ",
    "comb :process()",
    "comb:process( a, b, c )",
    "comb : process (p1, p2, p3, p4)",
    "comb: process(param)",
    "comb : process(x, y)",
    "comb:process (param)",
    "comb : process (one, two, three)",
    "comb\t:\tprocess\t( p )",
    "comb:process( a )",
    "comb : process( something )",
    "comb : process (p)",
    "comb : process (arg)",
    "comb : process (just_one)",
    "comb:process(0,1,2,3)",
    "comb : process (a,b,c,d)",
    "comb: process (single)",
    "comb:process() ",
    "comb :process(1,2,3)",
    "comb : process (param, )",
    " comb: process(param1,param2) ",
    "comb : process (param1 )",
    "comb : process(single)",
    "comb : process (x,y,z)",
    "comb: process (a)",
    "comb :process( variable_name )",
    "comb:process( a, b )",
    "comb : process (param1, param2)",
    "comb: process (abc, def)",
    "comb :process( )",
    " comb : process (param1,param2 ) ",
    "comb : process(a, b, c )"
  ],
  "no": [
    "comb process (param)",
    "process : comb (param)",
    "comb:processparam)",
    "comb: processparam)",
    "comb : process (param",
    "com:process(param)",
    "comb:process param",
    "comb process(param)",
    "comb:process(param",
    "comb:process(param1, param2",
    "comb:process, param)",
    "comb process (param1, param2)",
    "combs: process(param)",
    "comb :process: (param)",
    "comb process: (param)",
    "comb : proc (param)",
    "comb:proc(param)",
    "comb: process[param]",
    "comb:process:param",
    "process: comb(param)",
    "comb : process(param",
    "comb :process(param",
    "proc: comb(param)",
    "comb: process param",
    "comb :process param",
    "comb : process(param",
    "comb- process(param)",
    "comb:process(param",
    "comb: process param",
    "comb process (param)",
    "comb process param",
    "combs :process(param)",
    "combine:process(param)",
    "comb: process param",
    "process (param)",
    "comb:process: (param)",
    "comb:process(param1,param2",
    "comb:process(param1,)",
    "comb : process (param1,param2",
    "comb: processparam)",
    "comb:process: (param)",
    "comb:process(param1,",
    "comb: process(param1, param2",
    "com:process(param)",
    "comb process(param)",
    "comb:process(param1, ",
    "comb: process(param1",
    "process: comb(param)",
    "comb:process(param1,param2"
  ]
}