{
  "expr": "public\\s(\\S*)\\s(\\S*)|=\\s(\\S*)|\"(.*?)\"",
  "yes": [
    "public bool ShouldMonitorSpoolFiles",
    "public int MaxCount",
    "public StringBuilder textBuffer",
    "public class ExampleClass",
    "public void Main(string[] args)",
    "public static int counter",
    "public bool isActive",
    "public double CalculateArea(double radius)",
    "public char firstLetter",
    "public DateTime currentDate",
    "public bool ExpectingEMFReceipt { get; set; }",
    "public bool ForceEMFPrinting { get; set; }",
    "public bool DisableEMFPrinting{ get; set; }",
    "= 42",
    "= \"Hello, World!\"",
    "= true",
    "= 3.14",
    "= 'X'",
    "= new List<int>()",
    "= CalculateArea(radius)",
    "\"Simple string\"",
    "\"Another string with spaces\"",
    "\"\"",
    "\"1234567890\"",
    "\"Special characters: !@#$%^&*()\"",
    "\"Newline\\nTab\\t\"",
    "\"String with a quote: \\\"\"",
    "\"Unicode: \\u1234\"",
    "\"Long string with lots of text to test edge cases\"",
    "\"Short\"",
    "\"Escaped backslash: \\\\\"",
    "public List<string> names",
    "public Task<int> AsyncMethod()",
    "public Dictionary<int, string> dict",
    "public static readonly int MaxValue",
    "public const double Pi",
    "public override string ToString()",
    "public event EventHandler MyEvent",
    "public delegate void SampleDelegate()",
    "public partial class PartialClass",
    "public interface IExampleInterface",
    "public struct MyStruct",
    "public long LargeNumber",
    "public short SmallNumber",
    "public ulong UnsignedLargeNumber",
    "public uint UnsignedInteger",
    "public byte ByteValue",
    "public sbyte SignedByteValue"
  ],
  "no": [
    "private bool isPrivate",
    "protected int protectedInt",
    "internal string internalString",
    "publicboolNoSpace",
    "public",
    "bool",
    "public  bool  doubleSpace",
    "notpublic bool notPublic",
    "public boolShouldMonitorSpoolFiles",
    "=42",
    "=textWithoutSpace",
    "==",
    "== 5",
    "=!",
    "= 5+5",
    "=\"Unmatched",
    "'Single quotes'",
    "\"Mismatched quote",
    "\"Whitespace test\" ",
    " public leadingSpace",
    "public trailingSpace ",
    "public boolNoSpace",
    "= noValue",
    "public  void  ExtraSpaces",
    "\"Unterminated",
    "\"Multiple lines\nSecond line\"",
    "\"Escaped \\ character\"",
    "\"Escaped \\\\ character\"",
    "\"No matching\"quote",
    "\"Random punctuation: ;:'\",<.>/?",
    "public Int32",
    "public void",
    "public class",
    "public interface",
    "public struct",
    "public event",
    "public delegate",
    "public partial",
    "public static",
    "public const",
    "public override",
    "public virtual",
    "public abstract",
    "public sealed"
  ]
}