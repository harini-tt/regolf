{
  "expr": "^((?!-([ABC])(\\d{3})).)*$",
  "yes": [
    "02731043-V2024",
    "02731043*-V2024",
    "02731043*-I2024",
    "3423432fffetertetg02731043*-V2024",
    "02731043",
    "02731043*",
    "hello-world",
    "test123",
    "A1234",
    "B5678",
    "C91011",
    "ZZZ-123",
    "NoMatch-XYZ",
    "123-NotABC",
    "A1B2C3",
    "simple-string",
    "another_example",
    "1234567890",
    "A1-B2-C3",
    "ABCDEFG",
    "XYZ-789",
    "random-text",
    "test-string",
    "example123",
    "no-pattern-here",
    "test-1234",
    "alpha-beta",
    "gamma-delta",
    "epsilon-zeta",
    "hello123",
    "world456",
    "python3",
    "java8",
    "regex101",
    "pattern-match",
    "this-is-fine",
    "all-good",
    "safe-string",
    "secure-text",
    "valid-input",
    "check-pass",
    "string-validate",
    "no-danger",
    "free-of-pattern",
    "nothing-to-see",
    "just-testing",
    "simple-check",
    "pass-through",
    "match-found",
    "clear-text"
  ],
  "no": [
    "-A123",
    "-B456",
    "-C789",
    "A-123",
    "B-234",
    "C-345",
    "prefix-A123",
    "suffix-B456",
    "middle-C789",
    "123-A123",
    "456-B456",
    "789-C789",
    "A123-in-the-middle",
    "B456-at-the-end",
    "C789-at-the-start",
    "-A999",
    "-B888",
    "-C777",
    "start-A123",
    "end-B456",
    "inside-C789",
    "A123-",
    "B456-",
    "C789-",
    "A123-XYZ",
    "B456-ABC",
    "C789-DEF",
    "-A111",
    "-B222",
    "-C333",
    "A-111",
    "B-222",
    "C-333",
    "A123-456",
    "B234-567",
    "C345-678",
    "-A444",
    "-B555",
    "-C666",
    "pre-A123",
    "post-B456",
    "mid-C789",
    "-A000",
    "-B111",
    "-C222",
    "123-A321",
    "456-B654",
    "789-C987",
    "A321-B123",
    "B654-C456",
    "C987-A789",
    "-A888",
    "-B999",
    "-C000"
  ]
}