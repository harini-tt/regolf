{
  "expr": "ULong[\\s]GenerateHashValue[\\s]*\\((?!void)[\\s\\w&*]+\\)",
  "yes": [
    "ULong GenerateHashValue(int x)",
    "ULong GenerateHashValue(char *str)",
    "ULong GenerateHashValue(unsigned long *value)",
    "ULong GenerateHashValue(const MyClass &obj)",
    "ULong GenerateHashValue(\tint x)",
    "ULong GenerateHashValue(int* arr)",
    "ULong GenerateHashValue(const char* str)",
    "ULong GenerateHashValue(MyStruct& myStruct)",
    "ULong GenerateHashValue(unsigned long& value)",
    "ULong GenerateHashValue (long *ptr)",
    "ULong GenerateHashValue(double num )",
    "ULong GenerateHashValue( std::string &str )",
    "ULong GenerateHashValue( MyType &object )",
    "ULong GenerateHashValue(int *ptr, int size)",
    "ULong GenerateHashValue(float f)",
    "ULong GenerateHashValue(double *dblPtr)",
    "ULong GenerateHashValue(long value)",
    "ULong GenerateHashValue(unsigned int number)",
    "ULong GenerateHashValue(bool flag)",
    "ULong GenerateHashValue(char c)",
    "ULong GenerateHashValue(\tconst int &ref )",
    "ULong GenerateHashValue(const unsigned char &byte)",
    "ULong GenerateHashValue(long int count)",
    "ULong GenerateHashValue(void* ptr)",
    "ULong GenerateHashValue(std::vector<int> &v)",
    "ULong GenerateHashValue(std::map<int, int> &map)",
    "ULong GenerateHashValue(__int64 num)",
    "ULong GenerateHashValue(MyClass *cls)",
    "ULong GenerateHashValue(MyNamespace::Type var)",
    "ULong GenerateHashValue(MyNamespace::Type *var)",
    "ULong GenerateHashValue(MyNamespace::Type &var)",
    "ULong GenerateHashValue(std::array<int, 10> &arr)",
    "ULong GenerateHashValue(std::list<MyClass> &lst)",
    "ULong GenerateHashValue(int64_t largeNumber)",
    "ULong GenerateHashValue(uint32_t id)",
    "ULong GenerateHashValue(long double ld)",
    "ULong GenerateHashValue(std::string str)",
    "ULong GenerateHashValue(uint8_t byte)",
    "ULong GenerateHashValue(uint64_t big)",
    "ULong GenerateHashValue(char16_t ch)",
    "ULong GenerateHashValue(char32_t character)",
    "ULong GenerateHashValue(const long long &ll)",
    "ULong GenerateHashValue(int value )",
    "ULong GenerateHashValue( char *buffer )",
    "ULong GenerateHashValue( const wchar_t &wideChar )",
    "ULong GenerateHashValue( int &number )",
    "ULong GenerateHashValue( volatile int *vptr )",
    "ULong GenerateHashValue( register int reg )",
    "ULong GenerateHashValue( long double &ld )",
    "ULong GenerateHashValue( char **ptrptr )"
  ],
  "no": [
    "void GenerateHashValue(int x)",
    "ULong GenerateHashValue(void)",
    "ULong GenerateHashValue()",
    "ULongGenerateHashValue(int x)",
    "ULong GenerateHashValue void (int x)",
    "GenerateHashValue(ULong int x)",
    "ULong GenerateHashValue(int x void)",
    "ULong GenerateHashValue(int x void)",
    "ULong GenerateHashValue void(int x)",
    "ULong GenerateHash(void)",
    "ULong GenerateHashValue (void )",
    "Long GenerateHashValue(int x)",
    "ULong GenerateValue(int x)",
    "ULong GenerateHashValue (void)",
    "ULong GenerateHashValue ( )",
    "ULong GenerateHashValue(void *ptr)",
    "ULong GenerateHashValue (long)",
    "GenerateHashValue (ULong x)",
    "ULong GenerateHashValue (void* ptr)",
    "ULong GenerateHashValue (void)",
    "void ULong GenerateHashValue(int x)",
    "GenerateHashValue ULong(int x)",
    "ULong HashGenerateValue (int x)",
    "ULong Generate HashValue (int x)",
    "ULong GenerateHashValue (void)",
    "ULong GenerateHashValue (int x, void* ptr)",
    "ULong GenerateHashValue (int x) void",
    "ULong GenerateHashValue (int x) (void)",
    "ULong GenerateHashValue (void int x)",
    "ULong GenerateHashValue (void, int x)",
    "ULong GenerateHashValue (int x; void)",
    "ULong GenerateHashValue (void int)",
    "ULong GenerateHashValue (void, void)",
    "ULong GenerateHashValue (void* x)",
    "ULong GenerateHashValue ( ) void",
    "ULong GenerateHashValue (void* x, void* y)",
    "ULong GenerateHashValue (int x;)",
    "ULong GenerateHashValue (int x, void)",
    "ULong GenerateHashValue (void, void* ptr)",
    "ULong GenerateHashValue void (void)",
    "ULong GenerateHashValue (void* x, int y)",
    "ULong GenerateHashValue (void ptr)",
    "ULong GenerateHashValue (int x, void* y)",
    "ULong GenerateHashValue (void) int",
    "ULong GenerateHashValue (void* ptr, int x)",
    "ULong GenerateHashValue (void) void",
    "ULong GenerateHashValue (void, int x)",
    "ULong GenerateHashValue (int x) void*",
    "ULong GenerateHashValue (int x void y)"
  ]
}