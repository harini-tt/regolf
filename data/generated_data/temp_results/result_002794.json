{
  "expr": "^[a-zA-Z0-9_.]{1,64}$",
  "yes": [
    "asdv",
    "user_name",
    "UserName123",
    "user.name",
    "username_123",
    "123456",
    "A",
    "Z",
    "z",
    "0",
    "9",
    "_",
    ".",
    "a1b2C3",
    "_.A1",
    "x__y__z",
    "abc.def.ghi",
    "123_456_789",
    "john.doe",
    "JaneDoe",
    "simple_test",
    "complex_case123",
    "test_case_01",
    "example123.",
    "just_under_64_chars_long_string_example1234567890123",
    "HELLO_WORLD",
    "world_hello",
    "NodeJS_2023",
    "Python_3_9_1",
    "Server_2023",
    "Client_Application",
    "front_end_dev",
    "back_end_dev",
    "fullstack_dev",
    "database_2023",
    "system_admin",
    "network_engineer",
    "software_engineer",
    "devops_specialist",
    "cloud_architect",
    "data_scientist",
    "machine_learning",
    "artificial_intelligence",
    "1234567890",
    "abcdefghijklmnopqrstuvwxyz",
    "ABCDEFGHIJKLMNOPQRSTUVWXYZ",
    "1a2b3c4d5e6f7g8h9i0j",
    "the_quick_brown_fox_jumps_over_the_lazy_dog"
  ],
  "no": [
    "",
    " ",
    "    ",
    "this string has spaces",
    "this-string-has-hyphens",
    "has@symbol",
    "has#hash",
    "has$money",
    "has%percent",
    "has^caret",
    "has&and",
    "has*asterisk",
    "has(para",
    "has)thesis",
    "has+plus",
    "has=equals",
    "has{braces",
    "has}braces",
    "has[brackets",
    "has]brackets",
    "has|pipe",
    "has\\backslash",
    "has/slash",
    "has:colon",
    "has;semicolon",
    "has'quote",
    "has\"quote",
    "has<less",
    "has>greater",
    "has,comma",
    "has?question",
    "has!exclamation",
    "has~tilde",
    "has`backtick",
    "username@example.com",
    "http://example.com",
    "ftp://fileserver",
    "file_path/c:/",
    "64_characters_long_string_example_but_it_exceeds_the_length_limit_123456",
    "65_characters_long_string_example_but_it_exceeds_the_length_limit_1234567",
    "two..dots",
    "..leadingdots",
    "trailingdots..",
    "double__underscores",
    "__leadingunderscores",
    "trailingunderscores__",
    "\nnewline",
    "\ttab"
  ]
}