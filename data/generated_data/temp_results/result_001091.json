{
  "expr": "( +)middleware: to => {\\n.*?\\n\\1},",
  "yes": [
    "    middleware: to => {\n    console.log('example');\n    },",
    " middleware: to => {\n console.log('test');\n },",
    "  middleware: to => {\n  alert('hello');\n  },",
    "        middleware: to => {\n        const a = 1;\n        },",
    " middleware: to => {\n let x = 5;\n },",
    "     middleware: to => {\n     const y = 'text';\n     },",
    " middleware: to => {\n console.log('another test');\n },",
    "      middleware: to => {\n      let z = true;\n      },",
    " middleware: to => {\n const obj = {};\n },",
    "   middleware: to => {\n   const arr = [];\n   },",
    " middleware: to => {\n console.log('edge case');\n },",
    "     middleware: to => {\n     console.warn('warning');\n     },",
    " middleware: to => {\n throw new Error('error');\n },",
    "      middleware: to => {\n      if (true) {}\n      },",
    " middleware: to => {\n for (let i = 0; i < 10; i++) {}\n },",
    "  middleware: to => {\n  while (false) {}\n  },",
    " middleware: to => {\n const regex = /test/;\n },",
    "    middleware: to => {\n    const func = () => {};\n    },",
    " middleware: to => {\n const num = 123;\n },",
    "       middleware: to => {\n       const str = 'string';\n       },",
    " middleware: to => {\n const bool = false;\n },",
    " middleware: to => {\n const nullValue = null;\n },",
    " middleware: to => {\n const undefinedValue = undefined;\n },",
    " middleware: to => {\n const date = new Date();\n },",
    " middleware: to => {\n const map = new Map();\n },",
    " middleware: to => {\n const set = new Set();\n },",
    " middleware: to => {\n console.error('error log');\n },",
    " middleware: to => {\n console.info('info log');\n },",
    " middleware: to => {\n console.debug('debug log');\n },",
    " middleware: to => {\n alert('alert');\n },",
    " middleware: to => {\n prompt('prompt');\n },",
    " middleware: to => {\n confirm('confirm');\n },",
    " middleware: to => {\n const buffer = Buffer.alloc(10);\n },",
    " middleware: to => {\n const int8 = new Int8Array();\n },",
    " middleware: to => {\n const float32 = new Float32Array();\n },",
    " middleware: to => {\n const sym = Symbol('sym');\n },",
    " middleware: to => {\n const bigInt = BigInt(123);\n },",
    " middleware: to => {\n const json = JSON.stringify({});\n },",
    " middleware: to => {\n JSON.parse('{}');\n },",
    " middleware: to => {\n const xhr = new XMLHttpRequest();\n },",
    " middleware: to => {\n fetch('https://api.example.com');\n },",
    " middleware: to => {\n const ws = new WebSocket('ws://example.com');\n },",
    " middleware: to => {\n const req = require('module');\n },",
    " middleware: to => {\n import('module').then();\n },",
    " middleware: to => {\n const mod = import.meta;\n },",
    " middleware: to => {\n const expr = /abc/.exec('abcdef');\n },",
    " middleware: to => {\n const match = 'abcdef'.match(/abc/);\n },",
    " middleware: to => {\n const replace = 'abc'.replace(/a/, 'x');\n },",
    " middleware: to => {\n 'abc'.includes('a');\n },",
    " middleware: to => {\n 'abc'.startsWith('a');\n },"
  ],
  "no": [
    "middleware: to => {\nconsole.log('no spaces');\n},",
    " middleware: to => {\nconsole.log('missing ending space');\n },",
    " middleware: to => {\n console.log('extra space');\n  },",
    " middleware: to => {\n console.log('mismatched spaces');\n   },",
    "middleware: to => {\n console.log('no leading space');\n },",
    " middleware: to => {\nconsole.log('inconsistent indentation');\n },",
    " middleware: to => {\n console.log('missing new line');},",
    " middleware: to => {console.log('no new line');\n },",
    " middleware: to => {\n console.log('no matching space');\n  },",
    "middleware: to => {console.log('no spaces anywhere');},",
    " middleware to => {\n console.log('missing colon');\n },",
    " middleware: to => {\n console.log('missing arrow');\n },",
    " middleware: to => {\n console.log('extra character');\n };",
    " middleware: to => {\n console.log('missing closing');",
    " middleware: to => {\n console.log('mismatched indentation');\n},",
    " middleware: to => {\n console.log('incorrect closing');\n )};",
    " middleware: to => {\n console.log('wrong character');\n ]},",
    " middleware: to => {\n console.log('missing comma');\n }",
    "middleware: to => {\n console.log('missing spaces');\n},",
    " middleware: to => {\n console.log('wrong space');\n  },",
    "middleware: to=>{\nconsole.log('no spaces');\n},",
    " middleware:to =>{\n console.log('missing space');\n },",
    " middleware: to=>{\n console.log('missing space');\n },",
    " middleware: to => {\n console.log('extra space');\n },",
    " middleware: to => {\n console.log('no closing');",
    " middleware: to => {\n console.log('spaces');\n  },",
    " middleware: to => {\n console.log('incorrect closing');\n },",
    " middleware: to => {\n console.log('missing newline');},",
    " middleware: to => {\n console.log('extra newline');\n\n },",
    " middleware: to => {\n console.log('wrong indentation');\n},",
    " middleware: to => {\n console.log('no match');\n },",
    " middleware: to => {\n console.log('missing match');\n },",
    " middleware: to => {\n console.log('no trailing space');\n },",
    " middleware: to => {\n console.log('incorrect spacing');\n  },",
    " middleware: to=> {\n console.log('incorrect arrow');\n },",
    " middleware: to=>{\n console.log('missing spaces');\n},",
    " middleware: to => {\n console.log('extra characters');\n },",
    " middleware: to => {\n console.log('wrong newline');\n },",
    " middleware: to => {\n console.log('missing indentation');\n },",
    " middleware: to => {\n console.log('incorrect match');\n },",
    " middleware: to => {\n console.log('no space');\n },",
    " middleware: to => {\n console.log('missing arrow');\n },",
    " middleware: to=>{\n console.log('no space');\n },",
    " middleware: to => {\nconsole.log('wrong newline');\n },",
    " middleware: to => {\n console.log('extra newline');\n },",
    " middleware: to => {\n console.log('missing newline');},",
    " middleware: to => {\n console.log('incorrect closure');\n },",
    " middleware: to => {\n console.log('no match');\n },"
  ]
}