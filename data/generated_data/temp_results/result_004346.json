{
  "expr": "[\\(\\)\uff08\uff09]",
  "yes": [
    "()",
    "\uff08",
    "\uff09",
    "(hello)",
    "text()",
    "(()",
    "())",
    "\uff08text\uff09",
    "a(b)c",
    "a\uff08b\uff09c",
    "a)b(c",
    "text(inside)",
    "\uff08nested\uff08",
    "text before (text inside) text after",
    "multiple (parentheses) in (a) string",
    "nested ((parentheses))",
    "\uff08\uff08multiple\uff09\uff09",
    "(a(b)c)",
    "(a\uff09",
    "a(b)c)d",
    "start(\uff09end",
    "start\uff08)end",
    "text with \uff08many\uff09 brackets",
    "symbols like ( and )",
    "123()456",
    "sample text (example)",
    "empty () parentheses",
    "only (one",
    "closing ) only",
    "two (in) one",
    "special (characters)",
    "foreign\uff08characters\uff09",
    "mix of (and)",
    "complex (nested (parentheses))",
    "space ( ) here",
    "a(b(c)d)e",
    "\uff08test",
    "test\uff09",
    "(open",
    "close)",
    "start (middle) end",
    "123(456)789",
    "brackets\uff08here",
    "text) here",
    "leading (space",
    "trailing) space",
    "various (elements)",
    "inside( outside)",
    "balanced( unbalanced)"
  ],
  "no": [
    "abc",
    "hello",
    "12345",
    "text without brackets",
    "plain text",
    "symbols like !@#$%",
    "nested braces {}",
    "square brackets []",
    "curly braces {}",
    "angles <>",
    "completely different",
    "just plain words",
    "no special characters",
    "1234567890",
    "abcdefg",
    "lots of words",
    "punctuation, marks.",
    "space only",
    "empty string",
    "dash-separated",
    "underscore_separated",
    "slash/separated",
    "pipe|separated",
    "backslash\\separated",
    "colon:separated",
    "semicolon;separated",
    "quote\"separated",
    "single'quote",
    "tilde~character",
    "backtick`character",
    "plus+character",
    "equals=character",
    "percent%character",
    "ampersand&character",
    "asterisk*character",
    "caret^character",
    "at@character",
    "hash#character",
    "dollar$character",
    "no brackets here",
    "words with spaces",
    "tab\tcharacter",
    "newline\ncharacter",
    "return\rcharacter",
    "mixed symbols !@#$%",
    "various symbols ^&*()",
    "words123numbers",
    "camelCaseWords",
    "PascalCaseWords",
    "snake_case_words",
    "kebab-case-words"
  ]
}