{
  "expr": "(?s)(catch[^}]*?){(?:(?!\\bthrow|new\\b).)+?}",
  "yes": [
    "catch(Exception e) { handle(); }",
    "catch (IOException ex) { logError(); }",
    "catch (CustomException ce) { recover(); }",
    "try { doSomething(); } catch(Exception ex) { handle(); }",
    "catch(RuntimeException re) { System.out.println('Error'); }",
    "catch (Exception e) { e.printStackTrace(); }",
    "catch (MyException thisException) { System.out.println('Caught'); }",
    "try { riskyOperation(); } catch (Exception ex) { cleanUp(); }",
    "catch (MyException me) { System.out.println('Handling'); }",
    "catch (IOException e) { System.out.println('I/O Error'); }",
    "catch (SQLException e) { logSQL(); }",
    "catch (ParseException pe) { recoverFromParse(); }",
    "catch (Throwable t) { reportError(); }",
    "try { risky(); } catch(SomeException e) { respond(); }",
    "try { code(); } catch (CustomException e) { System.out.println('Custom'); }",
    "catch (AnotherException ae) { System.out.println('Another'); }",
    "try { something(); } catch (Exception e) { System.out.println('Base'); }",
    "catch (MyCustomException e) { handleCustom(); }",
    "try { dangerous(); } catch (SpecificException se) { System.out.println('Specific'); }",
    "catch (Exception e) { Logger.log(e); }",
    "try { run(); } catch(Exception e) { e.handle(); }",
    "catch (Exception e) { doCleanup(); }",
    "catch (IllegalStateException e) { System.out.println('Illegal State'); }",
    "try { risky(); } catch (SecurityException se) { handleSecurity(); }",
    "catch (CustomException e) { CustomHandler.handle(e); }",
    "catch (FileNotFoundException fnfe) { System.out.println('File not found'); }",
    "catch (Exception e) { error(e); }",
    "try { execute(); } catch (Exception e) { System.out.println('Executed'); }",
    "catch (Exception e) { notify(); }",
    "catch (MyException e) { MyLogger.log(e); }",
    "catch (Exception e) { System.out.println('Error occurred'); }",
    "try{ risky(); }catch(Exception e){ handle(); }",
    "catch(Exception e){ System.out.println('Handled'); }",
    "catch (MyException e) { System.out.println('MyException'); }",
    "catch (Exception e) { return; }",
    "catch (IOException e) { System.out.println('IOException'); }",
    "catch (Exception e) { e.printMessage(); }",
    "catch (Exception e) { System.out.println('Catch block'); }",
    "catch (CustomException e) { System.out.println('Custom caught'); }",
    "catch (Exception e) { System.out.println('Handle it'); }",
    "catch (Exception e) { e.log(); }",
    "catch (MyException e) { handle(); }",
    "catch (Exception e) { e.printCause(); }",
    "try { code(); } catch (Exception e) { e.handle(); }",
    "catch (Exception e) { e.logError(); }",
    "try { risky(); } catch (Exception e) { e.cleanup(); }",
    "catch (Exception e) { e.printStackTrace(); }",
    "try { doSomething(); } catch (Exception e) { e.handle(); }",
    "catch (CustomException e) { e.log(); }",
    "catch (Exception e) { e.print(); }"
  ],
  "no": [
    "catch(Exception e) throw new Exception();",
    "try { doSomething(); } catch (Exception e) { throw; }",
    "catch (Exception e) { new RuntimeException(); }",
    "catch (Exception e) { throw e; }",
    "catch (Exception e) { new Exception(); }",
    "catch (Exception e) { throw new CustomException(); }",
    "try { risky(); } catch (IOException e) { throw new IOException(); }",
    "catch(Exception e) { new Error(); }",
    "catch (Exception e) { throw new Throwable(); }",
    "catch (Exception e) { new Something(); }",
    "catch (Exception e) { throw new Error(); }",
    "catch (MyException e) { throw e; }",
    "catch (Exception e) { throw new IllegalArgumentException(); }",
    "catch (Exception e) { new Foo(); }",
    "catch (Exception e) { throw new Bar(); }",
    "catch (Exception e) { throw new NullPointerException(); }",
    "catch (Exception e) { throw new SQLException(); }",
    "catch (Exception e) { throw new ParseException(); }",
    "catch (Exception e) { throw new IOException(); }",
    "catch (Exception e) { throw new CustomException(); }",
    "try { something(); } catch (Exception e) { throw new Something(); }",
    "catch (Exception e) { throw new Exception('Error'); }",
    "catch (Exception e) { throw new RuntimeException('Message'); }",
    "catch (Exception e) { throw new Exception(); }",
    "catch (Exception e) { throw new Error(); }",
    "catch (Exception e) { throw new Exception('Custom message'); }",
    "catch (Exception e) { throw new RuntimeException(); }",
    "catch (Exception e) { throw new CustomException('Custom'); }",
    "catch (Exception e) { throw new SpecificException(); }",
    "catch (Exception e) { throw new CustomException(); }",
    "catch (Exception e) { throw new Error('Error'); }",
    "catch (Exception e) { throw new Exception(); }",
    "catch (Exception e) { throw new RuntimeException(); }",
    "catch (Exception e) { throw new CustomError(); }",
    "catch (Exception e) { throw new SpecificError(); }",
    "catch (Exception e) { throw new FooException(); }",
    "catch (Exception e) { throw new BarException(); }",
    "catch (Exception e) { throw new BazException(); }",
    "catch (Exception e) { throw new CustomError(); }",
    "catch (Exception e) { throw new MyException(); }",
    "catch (Exception e) { throw new AnotherException(); }",
    "catch (Exception e) { throw new YetAnotherException(); }",
    "catch (Exception e) { throw new SpecificException(); }",
    "try { risky(); } catch (Exception e) { throw new Exception(); }",
    "catch (Exception e) { throw new Exception('Error message'); }",
    "catch (Exception e) { throw new RuntimeException('Error'); }",
    "catch (Exception e) { throw new CustomException('Error'); }",
    "catch (Exception e) { throw new SpecificException('Error'); }",
    "catch (Exception e) { throw new AnotherException('Error'); }",
    "catch (Exception e) { throw new YetAnotherException('Error'); }"
  ]
}