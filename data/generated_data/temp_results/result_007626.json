{
  "expr": "(fprintf(\\s*)\\((\\s*\\S+\\s*)[,])([^\\\"])",
  "yes": [
    "fprintf(out, 42);",
    "fprintf(stdout, var);",
    "fprintf ( err , error_code);",
    "fprintf( data , value);",
    "fprintf(stderr, 0);",
    "fprintf ( log , info);",
    "fprintf(out , placeholder);",
    "fprintf(fd , 123);",
    "fprintf(  file , result);",
    "fprintf( output, process_data);",
    "fprintf ( dest, 56);",
    "fprintf( in , buffer);",
    "fprintf( output , calculation);",
    "fprintf(  channel , 3.14);",
    "fprintf(file, 1);",
    "fprintf( stream , variable);",
    "fprintf( file , user_input);",
    "fprintf( stdout , msg);",
    "fprintf ( error , pointer);",
    "fprintf( out , 0x10);",
    "fprintf(   log, 100);",
    "fprintf(  console , 'A');",
    "fprintf(  handle , line_count);",
    "fprintf(   dest , 0Xdeadbeef);",
    "fprintf(device , 0b1010);",
    "fprintf(   fd, 0o777);",
    "fprintf(stream, 0);",
    "fprintf(  file, abc);",
    "fprintf( socket , 0);",
    "fprintf( pipe , 1);",
    "fprintf(  channel , 42);",
    "fprintf(  port, 0xFF);",
    "fprintf(   file, 0.001);",
    "fprintf(buffer, 1000);",
    "fprintf(  output, 'c');",
    "fprintf(   log , 0u);",
    "fprintf( output , 0L);",
    "fprintf(   stream, 0UL);",
    "fprintf(  device , 0LL);",
    "fprintf(  fd, 0ULL);",
    "fprintf(   pipe , 0.0);",
    "fprintf( output, 1.0);",
    "fprintf(   console , 0.1);",
    "fprintf( handle, 0.);",
    "fprintf(  dest , 10e-2);",
    "fprintf(  channel, 0e0);",
    "fprintf(  port , +1);",
    "fprintf(  file, -1);"
  ],
  "no": [
    "fprintf(\"out\", 42);",
    "printf(out, 42);",
    "fprintf(out, \"Hello\");",
    "fprintf(\"stdout\", var);",
    "fprintf(out,);",
    "fprintf(\"\");",
    "fprint(out, 42);",
    "fprintf)",
    "fprintf( out \" , 123);",
    "fprintf( out , \"string\");",
    "fprintf( out , \"123\");",
    "fprintf( out , );",
    "fprintf( out , \"\");",
    "fprintf(\")",
    "print(out, 42);",
    "fprint( out , 42);",
    "fprintf out , 42);",
    "fprintf out , \"42\");",
    "fprint(out , 42);",
    "fprintf( out 42);",
    "fprintf(out 42);",
    "fprintf(out, \"42\");",
    "fprintf( out , \"error\");",
    "fprinf( out , 42);",
    "fprintf(out , \"test\");",
    "printff(out, 42);",
    "fprintf(out, \"\");",
    "fprintf( out , \"\");",
    "fprintf( out , \"error\");",
    "fprintf(out,);",
    "fprintf(out);",
    "fprintf( out , );",
    "fprintf(out)",
    "fprintf()",
    "fprintf((out), 42);",
    "fprintf(out, \"text\");",
    "fprintf(, out);",
    "fprintf( out , \"string\" );",
    "fprintf( out, 42);",
    "fprintf( out , );",
    "fprintf(  );",
    "fprintf ( out , );",
    "fprntf(out, 42);",
    "fprintf( out , \"msg\");",
    "fprintf(  , 42);",
    "fprintf( out , \"msg\" );",
    "fprintf( out , \"data\");",
    "fprintf( out , \"42\");"
  ]
}