{
  "expr": "t\\s*\\(('|\"|<<<(\\w+))([\\s\\S]+?)(?:(?<!\\\\)\\1|\\2)",
  "yes": [
    "t('hello world')",
    "t(\"another example\")",
    "t('single quoted string')",
    "t(\"double quoted string\")",
    "t('Escaped quote: \\' inside')",
    "t(\"Escaped quote: \\\" inside\")",
    "t('')",
    "t(\"\")",
    "t('multi\nline\nstring')",
    "t(\"multi\nline\nstring\")",
    "t('special chars !@#$%^&*()')",
    "t(\"special chars !@#$%^&*()\")",
    "t('1234567890')",
    "t(\"1234567890\")",
    "t(<<<HTML\n<p>HTML content</p>\nHTML)",
    "t(<<<TEXT\nsimple text block\nTEXT)",
    "t('nested \"quotes\" inside')",
    "t(\"nested 'quotes' inside\")",
    "t('escaped \\\\' backslash')",
    "t(\"escaped \\\\\" backslash\")",
    "t('spaces    and\ttabs')",
    "t(\"spaces    and\ttabs\")",
    "t('new\nline\ncharacters')",
    "t(<<<EOT\nHere-doc example\nEOT)",
    "t(<<<JSON\n{\"key\":\"value\"}\nJSON)",
    "t('punctuation: .,;!?')",
    "t(\"punctuation: .,;!?\")",
    "t('long string with multiple lines\nline 1\nline 2\nline 3')",
    "t(\"long string with multiple lines\nline 1\nline 2\nline 3\")",
    "t(<<<XML\n<root>\n  <child></child>\n</root>\nXML)",
    "t('tricky \"nested \\'quotes\\'\"')",
    "t(\"tricky 'nested \\\"quotes\\\"'\")",
    "t('')",
    "t(\"\")",
    "t(<<<MARKDOWN\n**Bold Text**\nMARKDOWN)",
    "t('t(\"nested\")')",
    "t(\"t('nested')\")",
    "t('Backslash \\\\ test')",
    "t(\"Backslash \\\\ test\")",
    "t(<<<SHELL\n#!/bin/bash\necho \"Shell script\"\nSHELL)",
    "t('single line, simple')",
    "t(\"single line, simple\")",
    "t('end with punctuation.')",
    "t(\"end with punctuation.\")",
    "t(<<<SQL\nSELECT * FROM table\nWHERE id=1;\nSQL)",
    "t('escaped backslash: \\\\\\\\')",
    "t(\"escaped backslash: \\\\\\\")",
    "t('using <tags> in text')",
    "t(\"using <tags> in text\")"
  ],
  "no": [
    "not a function",
    "t()",
    "t('unclosed",
    "t(\"unclosed",
    "t('mismatched\"quotes')",
    "t(\"mismatched'quotes\")",
    "t('escaped \\\" inside')",
    "t(\"escaped \\' inside\")",
    "t('no closing quote)",
    "t(\"no closing quote)",
    "t <<<HTML\nmissing terminator",
    "t('unterminated, no closing quote",
    "t('mismatched)')",
    "t(\"mismatched)\"",
    "t(<<<TAG\nopen but no close",
    "t('quote inside, no close)",
    "t(\"quote inside, no close)",
    "t(<HTML\nNo close terminator",
    "t('multi\nline\nunterminated",
    "t('nested \"open but no close)",
    "t(\"nested 'open but no close)",
    "t('escaped backslash: \\",
    "t(\"escaped backslash: \\",
    "t(<<<BLOCK\nopen but no close",
    "t('no ending quote",
    "t(\"no ending quote",
    "t('escaped backslash \\)",
    "t(\"escaped backslash \\)",
    "t('special chars without end",
    "t(\"special chars without end",
    "t('1234567890 without end",
    "t(\"1234567890 without end",
    "t(<<<XML\n<root> no end",
    "t('no closing) quote",
    "t(\"no closing) quote",
    "t('no closing parenthesis",
    "t(\"no closing parenthesis",
    "t(<<<JSON\n{\"key\":\"value\" no end",
    "t('punctuation without end",
    "t(\"punctuation without end",
    "t('long string with no end",
    "t(\"long string with no end",
    "t(<<<MARKDOWN\n**Bold Text** no end",
    "t('t(\"nested with no end)",
    "t(\"t('nested with no end)",
    "t('Backslash \\ test no end",
    "t(\"Backslash \\ test no end",
    "t(<<<SHELL\n#!/bin/bash no end",
    "t('single line, no end",
    "t(\"single line, no end",
    "t('end with punctuation no end",
    "t(\"end with punctuation no end",
    "t(<<<SQL\nSELECT * FROM table no end",
    "t('escaped backslash: \\ no end",
    "t(\"escaped backslash: \\ no end",
    "t('using <tags> in text no end",
    "t(\"using <tags> in text no end"
  ]
}